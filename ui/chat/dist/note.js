"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const snabbdom_1 = require("snabbdom");
const xhr = require("./xhr");
const util_1 = require("./util");
function noteCtrl(opts) {
    let text;
    const doPost = window.lichess.debounce(() => {
        xhr.setNote(opts.id, text);
    }, 1000);
    return {
        id: opts.id,
        trans: opts.trans,
        text: () => text,
        fetch() {
            xhr.getNote(opts.id).then(t => {
                text = t || '';
                opts.redraw();
            });
        },
        post(t) {
            text = t;
            doPost();
        }
    };
}
exports.noteCtrl = noteCtrl;
function noteView(ctrl) {
    const text = ctrl.text();
    if (text == undefined)
        return snabbdom_1.h('div.loading', {
            hook: {
                insert: ctrl.fetch
            },
        }, [util_1.spinner()]);
    return snabbdom_1.h('textarea', {
        attrs: {
            placeholder: ctrl.trans('typePrivateNotesHere')
        },
        hook: {
            insert(vnode) {
                const $el = $(vnode.elm);
                $el.val(text).on('change keyup paste', () => {
                    ctrl.post($el.val());
                });
            }
        }
    });
}
exports.noteView = noteView;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9ub3RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQTRCO0FBRzVCLDZCQUE0QjtBQUM1QixpQ0FBZ0M7QUFFaEMsU0FBZ0IsUUFBUSxDQUFDLElBQWM7SUFDckMsSUFBSSxJQUFZLENBQUE7SUFDaEIsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFO1FBQzFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM3QixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDVCxPQUFPO1FBQ0wsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFO1FBQ1gsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1FBQ2pCLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJO1FBQ2hCLEtBQUs7WUFDSCxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQzVCLElBQUksR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNmLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQTtZQUNmLENBQUMsQ0FBQyxDQUFBO1FBQ0osQ0FBQztRQUNELElBQUksQ0FBQyxDQUFDO1lBQ0osSUFBSSxHQUFHLENBQUMsQ0FBQztZQUNULE1BQU0sRUFBRSxDQUFBO1FBQ1YsQ0FBQztLQUNGLENBQUE7QUFDSCxDQUFDO0FBcEJELDRCQW9CQztBQUVELFNBQWdCLFFBQVEsQ0FBQyxJQUFjO0lBQ3JDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixJQUFJLElBQUksSUFBSSxTQUFTO1FBQUUsT0FBTyxZQUFDLENBQUMsYUFBYSxFQUFFO1lBQzdDLElBQUksRUFBRTtnQkFDSixNQUFNLEVBQUUsSUFBSSxDQUFDLEtBQUs7YUFDbkI7U0FDRixFQUFFLENBQUMsY0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBQ2YsT0FBTyxZQUFDLENBQUMsVUFBVSxFQUFFO1FBQ25CLEtBQUssRUFBRTtZQUNMLFdBQVcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLHNCQUFzQixDQUFDO1NBQ2hEO1FBQ0QsSUFBSSxFQUFFO1lBQ0osTUFBTSxDQUFDLEtBQUs7Z0JBQ1YsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFrQixDQUFDLENBQUM7Z0JBQ3hDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLG9CQUFvQixFQUFFLEdBQUcsRUFBRTtvQkFDMUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQTtnQkFDdEIsQ0FBQyxDQUFDLENBQUE7WUFDSixDQUFDO1NBQ0Y7S0FDRixDQUFDLENBQUE7QUFDSixDQUFDO0FBcEJELDRCQW9CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGggfSBmcm9tICdzbmFiYmRvbSdcbmltcG9ydCB7IFZOb2RlIH0gZnJvbSAnc25hYmJkb20vdm5vZGUnXG5pbXBvcnQgeyBOb3RlQ3RybCwgTm90ZU9wdHMgfSBmcm9tICcuL2ludGVyZmFjZXMnXG5pbXBvcnQgKiBhcyB4aHIgZnJvbSAnLi94aHInXG5pbXBvcnQgeyBzcGlubmVyIH0gZnJvbSAnLi91dGlsJ1xuXG5leHBvcnQgZnVuY3Rpb24gbm90ZUN0cmwob3B0czogTm90ZU9wdHMpOiBOb3RlQ3RybCB7XG4gIGxldCB0ZXh0OiBzdHJpbmdcbiAgY29uc3QgZG9Qb3N0ID0gd2luZG93LmxpY2hlc3MuZGVib3VuY2UoKCkgPT4ge1xuICAgIHhoci5zZXROb3RlKG9wdHMuaWQsIHRleHQpO1xuICB9LCAxMDAwKTtcbiAgcmV0dXJuIHtcbiAgICBpZDogb3B0cy5pZCxcbiAgICB0cmFuczogb3B0cy50cmFucyxcbiAgICB0ZXh0OiAoKSA9PiB0ZXh0LFxuICAgIGZldGNoKCkge1xuICAgICAgeGhyLmdldE5vdGUob3B0cy5pZCkudGhlbih0ID0+IHtcbiAgICAgICAgdGV4dCA9IHQgfHwgJyc7XG4gICAgICAgIG9wdHMucmVkcmF3KClcbiAgICAgIH0pXG4gICAgfSxcbiAgICBwb3N0KHQpIHtcbiAgICAgIHRleHQgPSB0O1xuICAgICAgZG9Qb3N0KClcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5vdGVWaWV3KGN0cmw6IE5vdGVDdHJsKTogVk5vZGUge1xuICBjb25zdCB0ZXh0ID0gY3RybC50ZXh0KCk7XG4gIGlmICh0ZXh0ID09IHVuZGVmaW5lZCkgcmV0dXJuIGgoJ2Rpdi5sb2FkaW5nJywge1xuICAgIGhvb2s6IHtcbiAgICAgIGluc2VydDogY3RybC5mZXRjaFxuICAgIH0sXG4gIH0sIFtzcGlubmVyKCldKVxuICByZXR1cm4gaCgndGV4dGFyZWEnLCB7XG4gICAgYXR0cnM6IHtcbiAgICAgIHBsYWNlaG9sZGVyOiBjdHJsLnRyYW5zKCd0eXBlUHJpdmF0ZU5vdGVzSGVyZScpXG4gICAgfSxcbiAgICBob29rOiB7XG4gICAgICBpbnNlcnQodm5vZGUpIHtcbiAgICAgICAgY29uc3QgJGVsID0gJCh2bm9kZS5lbG0gYXMgSFRNTEVsZW1lbnQpO1xuICAgICAgICAkZWwudmFsKHRleHQpLm9uKCdjaGFuZ2Uga2V5dXAgcGFzdGUnLCAoKSA9PiB7XG4gICAgICAgICAgY3RybC5wb3N0KCRlbC52YWwoKSlcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9XG4gIH0pXG59XG4iXX0=