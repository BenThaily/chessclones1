"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function enhance(text, parseMoves) {
    const escaped = window.lichess.escapeHtml(text);
    const linked = autoLink(escaped);
    const plied = parseMoves && linked === escaped ? addPlies(linked) : linked;
    return plied;
}
exports.enhance = enhance;
const moreThanTextPattern = /[&<>"@]/;
const possibleLinkPattern = /\.\w/;
function isMoreThanText(str) {
    return moreThanTextPattern.test(str) || possibleLinkPattern.test(str);
}
exports.isMoreThanText = isMoreThanText;
const linkPattern = /\b(https?:\/\/|lichess\.org\/)[-–—\w+&'@#\/%?=()~|!:,.;]+[\w+&@#\/%=~|]/gi;
function linkReplace(url, scheme) {
    if (url.includes('&quot;'))
        return url;
    const fullUrl = scheme === 'lichess.org/' ? 'https://' + url : url;
    const minUrl = url.replace(/^https:\/\//, '');
    return '<a target="_blank" rel="nofollow" href="' + fullUrl + '">' + minUrl + '</a>';
}
const userPattern = /(^|[^\w@#/])@([\w-]{2,})/g;
const pawnDropPattern = /^[a-h][2-7]$/;
function userLinkReplace(orig, prefix, user) {
    if (user.length > 20 || user.match(pawnDropPattern))
        return orig;
    return prefix + '<a href="/@/' + user + '">@' + user + "</a>";
}
function autoLink(html) {
    return html.replace(userPattern, userLinkReplace).replace(linkPattern, linkReplace);
}
const movePattern = /\b(\d+)\s*(\.+)\s*(?:[o0-]+[o0]|[NBRQKP]?[a-h]?[1-8]?[x@]?[a-z][1-8](?:=[NBRQK])?)\+?\#?[!\?=]{0,5}/gi;
function moveReplacer(match, turn, dots) {
    if (turn < 1 || turn > 200)
        return match;
    const ply = turn * 2 - (dots.length > 1 ? 0 : 1);
    return '<a class="jump" data-ply="' + ply + '">' + match + '</a>';
}
function addPlies(html) {
    return html.replace(movePattern, moveReplacer);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5oYW5jZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9lbmhhbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsU0FBZ0IsT0FBTyxDQUFDLElBQVksRUFBRSxVQUFtQjtJQUN2RCxNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoRCxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakMsTUFBTSxLQUFLLEdBQUcsVUFBVSxJQUFJLE1BQU0sS0FBSyxPQUFPLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQzNFLE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUxELDBCQUtDO0FBRUQsTUFBTSxtQkFBbUIsR0FBRyxTQUFTLENBQUM7QUFDdEMsTUFBTSxtQkFBbUIsR0FBRyxNQUFNLENBQUM7QUFFbkMsU0FBZ0IsY0FBYyxDQUFDLEdBQVc7SUFDeEMsT0FBTyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksbUJBQW1CLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3hFLENBQUM7QUFGRCx3Q0FFQztBQUVELE1BQU0sV0FBVyxHQUFHLDJFQUEyRSxDQUFDO0FBRWhHLFNBQVMsV0FBVyxDQUFDLEdBQVcsRUFBRSxNQUFjO0lBQzlDLElBQUksR0FBRyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUM7UUFBRSxPQUFPLEdBQUcsQ0FBQztJQUN2QyxNQUFNLE9BQU8sR0FBRyxNQUFNLEtBQUssY0FBYyxDQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDbkUsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDOUMsT0FBTywwQ0FBMEMsR0FBRyxPQUFPLEdBQUcsSUFBSSxHQUFHLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFDdkYsQ0FBQztBQUVELE1BQU0sV0FBVyxHQUFHLDJCQUEyQixDQUFDO0FBQ2hELE1BQU0sZUFBZSxHQUFHLGNBQWMsQ0FBQztBQUV2QyxTQUFTLGVBQWUsQ0FBQyxJQUFZLEVBQUUsTUFBYyxFQUFFLElBQVk7SUFDakUsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQztRQUFFLE9BQU8sSUFBSSxDQUFDO0lBQ2pFLE9BQU8sTUFBTSxHQUFHLGNBQWMsR0FBRyxJQUFJLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxNQUFNLENBQUM7QUFDaEUsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUFDLElBQVk7SUFDNUIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQ3RGLENBQUM7QUFFRCxNQUFNLFdBQVcsR0FBRyx1R0FBdUcsQ0FBQztBQUM1SCxTQUFTLFlBQVksQ0FBQyxLQUFhLEVBQUUsSUFBWSxFQUFFLElBQVk7SUFDN0QsSUFBSSxJQUFJLEdBQUcsQ0FBQyxJQUFJLElBQUksR0FBRyxHQUFHO1FBQUUsT0FBTyxLQUFLLENBQUM7SUFDekMsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pELE9BQU8sNEJBQTRCLEdBQUcsR0FBRyxHQUFHLElBQUksR0FBRyxLQUFLLEdBQUcsTUFBTSxDQUFDO0FBQ3BFLENBQUM7QUFFRCxTQUFTLFFBQVEsQ0FBQyxJQUFZO0lBQzVCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDakQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBlbmhhbmNlKHRleHQ6IHN0cmluZywgcGFyc2VNb3ZlczogYm9vbGVhbik6IHN0cmluZyB7XG4gIGNvbnN0IGVzY2FwZWQgPSB3aW5kb3cubGljaGVzcy5lc2NhcGVIdG1sKHRleHQpO1xuICBjb25zdCBsaW5rZWQgPSBhdXRvTGluayhlc2NhcGVkKTtcbiAgY29uc3QgcGxpZWQgPSBwYXJzZU1vdmVzICYmIGxpbmtlZCA9PT0gZXNjYXBlZCA/IGFkZFBsaWVzKGxpbmtlZCkgOiBsaW5rZWQ7XG4gIHJldHVybiBwbGllZDtcbn1cblxuY29uc3QgbW9yZVRoYW5UZXh0UGF0dGVybiA9IC9bJjw+XCJAXS87XG5jb25zdCBwb3NzaWJsZUxpbmtQYXR0ZXJuID0gL1xcLlxcdy87XG5cbmV4cG9ydCBmdW5jdGlvbiBpc01vcmVUaGFuVGV4dChzdHI6IHN0cmluZykge1xuICByZXR1cm4gbW9yZVRoYW5UZXh0UGF0dGVybi50ZXN0KHN0cikgfHwgcG9zc2libGVMaW5rUGF0dGVybi50ZXN0KHN0cik7XG59XG5cbmNvbnN0IGxpbmtQYXR0ZXJuID0gL1xcYihodHRwcz86XFwvXFwvfGxpY2hlc3NcXC5vcmdcXC8pWy3igJPigJRcXHcrJidAI1xcLyU/PSgpfnwhOiwuO10rW1xcdysmQCNcXC8lPX58XS9naTtcblxuZnVuY3Rpb24gbGlua1JlcGxhY2UodXJsOiBzdHJpbmcsIHNjaGVtZTogc3RyaW5nKSB7XG4gIGlmICh1cmwuaW5jbHVkZXMoJyZxdW90OycpKSByZXR1cm4gdXJsO1xuICBjb25zdCBmdWxsVXJsID0gc2NoZW1lID09PSAnbGljaGVzcy5vcmcvJyA/ICdodHRwczovLycgKyB1cmwgOiB1cmw7XG4gIGNvbnN0IG1pblVybCA9IHVybC5yZXBsYWNlKC9eaHR0cHM6XFwvXFwvLywgJycpO1xuICByZXR1cm4gJzxhIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93XCIgaHJlZj1cIicgKyBmdWxsVXJsICsgJ1wiPicgKyBtaW5VcmwgKyAnPC9hPic7XG59XG5cbmNvbnN0IHVzZXJQYXR0ZXJuID0gLyhefFteXFx3QCMvXSlAKFtcXHctXXsyLH0pL2c7XG5jb25zdCBwYXduRHJvcFBhdHRlcm4gPSAvXlthLWhdWzItN10kLztcblxuZnVuY3Rpb24gdXNlckxpbmtSZXBsYWNlKG9yaWc6IHN0cmluZywgcHJlZml4OiBTdHJpbmcsIHVzZXI6IHN0cmluZykge1xuICBpZiAodXNlci5sZW5ndGggPiAyMCB8fCB1c2VyLm1hdGNoKHBhd25Ecm9wUGF0dGVybikpIHJldHVybiBvcmlnO1xuICByZXR1cm4gcHJlZml4ICsgJzxhIGhyZWY9XCIvQC8nICsgdXNlciArICdcIj5AJyArIHVzZXIgKyBcIjwvYT5cIjtcbn1cblxuZnVuY3Rpb24gYXV0b0xpbmsoaHRtbDogc3RyaW5nKSB7XG4gIHJldHVybiBodG1sLnJlcGxhY2UodXNlclBhdHRlcm4sIHVzZXJMaW5rUmVwbGFjZSkucmVwbGFjZShsaW5rUGF0dGVybiwgbGlua1JlcGxhY2UpO1xufVxuXG5jb25zdCBtb3ZlUGF0dGVybiA9IC9cXGIoXFxkKylcXHMqKFxcLispXFxzKig/OltvMC1dK1tvMF18W05CUlFLUF0/W2EtaF0/WzEtOF0/W3hAXT9bYS16XVsxLThdKD86PVtOQlJRS10pPylcXCs/XFwjP1shXFw/PV17MCw1fS9naTtcbmZ1bmN0aW9uIG1vdmVSZXBsYWNlcihtYXRjaDogc3RyaW5nLCB0dXJuOiBudW1iZXIsIGRvdHM6IHN0cmluZykge1xuICBpZiAodHVybiA8IDEgfHwgdHVybiA+IDIwMCkgcmV0dXJuIG1hdGNoO1xuICBjb25zdCBwbHkgPSB0dXJuICogMiAtIChkb3RzLmxlbmd0aCA+IDEgPyAwIDogMSk7XG4gIHJldHVybiAnPGEgY2xhc3M9XCJqdW1wXCIgZGF0YS1wbHk9XCInICsgcGx5ICsgJ1wiPicgKyBtYXRjaCArICc8L2E+Jztcbn1cblxuZnVuY3Rpb24gYWRkUGxpZXMoaHRtbDogc3RyaW5nKSB7XG4gIHJldHVybiBodG1sLnJlcGxhY2UobW92ZVBhdHRlcm4sIG1vdmVSZXBsYWNlcik7XG59XG4iXX0=