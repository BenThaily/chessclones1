@charset "UTF-8";
/* Colors */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* text over primary background */
/* Secondary: green */
/* text over secondary background */
/* Accent: orange */
/* text over accent background */
/* Brag: gold */
/* text over brag background */
/* Error: red */
/* text over brag background */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Fancy: pink */
/* text over brag background */
/* Borders */
/* Shadows */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* Secondary: green */
/* Brag: gold */
/* Fancy: pink */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Common imports for all CSS modules */
/* Widths */
/* Heights */
/* Orientations */
/* Capabilities */
/* Aliases */
/* Uniboard: keep the same page layout accross pages */
/* when the width is appropriate for col1, but landscape prevents it */
/* atm only chrome supports min-content, max-content */
.activity section h2 {
  font-family: 'Noto Sans';
}

.game-row .header__text strong, .sub-ratings h3, .number-menu .nm-item, .activity rating {
  font-family: 'Roboto';
}

/* text printed directly on the page background deserves special treatment (transp theme) */
.sub-ratings a {
  color: #999999;
}

.crosstable__users, .crosstable__score, .user-show .angles {
  background: linear-gradient(to bottom, #3c3934, #33312e 100%);
}

#us_profile .col2 > a, .activity .line {
  white-space: nowrap;
}

.user-show .claim-title {
  padding: 5vh var(--box-padding);
}

.user-show .flash {
  padding: 0 var(--box-padding);
}

#us_profile .bio, .note-zone .note {
  overflow-wrap: break-word;
  word-break: break-word;
}

#us_profile .col2 > a, .activity .line, .crosstable__users {
  overflow: hidden;
  text-overflow: ellipsis;
}

.flash__content::before, .flash-warning .flash__content::before, .flash-failure .flash__content::before {
  font-size: 1.2em;
  vertical-align: middle;
  font-family: 'lichess';
  font-style: normal;
  font-weight: normal;
  text-transform: none;
  speak: none;
  content: attr(data-icon);
  opacity: 0.9;
}

.game-row__overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
}

.game-row .header, #us_profile, .user-show .angles .nm-item {
  /* extends %flex-wrap */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}

.sub-ratings a, #us_profile .warning, #us_profile .insight, .user-show__social .relation-actions {
  display: flex;
  flex-flow: row;
  align-items: center;
}

.user-show__social, .user-show .claim-title form {
  /* extends %flex-center */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
}

.note-zone .note {
  /* extends %flex-center */
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-between;
}

.crosstable povs, .crosstable__users, .crosstable__score, .crosstable__matchup, .sub-ratings a > span, #us_profile .profile-side {
  display: flex;
  flex-flow: column;
}

.crosstable, .now-playing a, .flash__content, #us_profile .warning, .activity score strong {
  border-radius: 3px;
}

.crosstable {
  overflow: hidden;
  /* helps with clipping background into border-radius */
}

.crosstable .sep, .sub-ratings a {
  border-radius: 3px 0 0 3px;
}

.number-menu--tabs .nm-item {
  border-radius: 3px 3px 0 0;
}

.crosstable, .sub-ratings a.game.active {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

.fire-trophy, .trophy.streaming, .trophy.patron:hover {
  text-shadow: 0 .008em .127em #fefcc9, .055em -.066em .2em #feec85, -.111em -.127em .272em #ffae34, .111em -.272em .411em #ec760c, -.111em -.456em .416em #cd4606, 0 -.533em .577em #973716, .055em -.55em .533em #451b0e;
}

@keyframes fire-trophy {
  0% {
    text-shadow: 0 .008em .127em #fefcc9, .055em -.066em .2em #feec85, -.111em -.127em .272em #ffae34, .111em -.272em .411em #ec760c, -.111em -.456em .416em #cd4606, 0 -.533em .577em #973716, .055em -.55em .533em #451b0e;
  }
  100% {
    text-shadow: 0 0 .111em #fefcc9, .055em -.055em .166em #fefcc9, -.111em -.111em .222em #feec85, .122em -.233em .333em #ffae34, -.122em -.322em .277em #ec760c, 0 -.456em .444em #cd4606, .055em -.5em .444em #973716;
  }
}

.fire-trophy {
  color: #bababa;
  font-size: 90px;
  display: block;
}

.fire-trophy:hover {
  animation: fire-trophy 1.5s ease-in-out infinite alternate;
}

.now-playing {
  display: grid;
  --np-min-width: 200px;
  grid-template-columns: repeat(auto-fill, minmax(var(--np-min-width), 1fr));
}

@media (max-width: 499px) {
  .now-playing {
    --np-min-width: 50%;
  }
}

.now-playing a {
  color: #bababa;
  padding: .3em;
  transition: background 150ms;
  background: rgba(38, 36, 33, 0.4);
}

.now-playing a:hover {
  background: rgba(54, 146, 231, 0.4);
  color: #cccccc;
}

.now-playing .meta {
  display: block;
  text-align: center;
  overflow: hidden;
}

.now-playing .indicator {
  color: #d64f00;
  margin-top: -3px;
  display: block;
}

.now-playing cg-board {
  box-shadow: none;
}

.hover-text::after {
  content: attr(title);
}

.hover-text:hover::after {
  content: attr(data-hover-text);
}

.crosstable__users {
  flex: 1 1 auto;
}

.crosstable {
  width: 100%;
  line-height: 1.9em;
  display: flex;
}

.crosstable fill,
.crosstable povs {
  background: #262421;
  flex: 1 1 auto;
}

.crosstable povs, .crosstable__users, .crosstable__score, .crosstable__matchup {
  text-align: center;
}

.crosstable__users {
  max-width: 40vw;
  text-align: left;
}

.crosstable__users a {
  padding-left: 2vmin;
}

.crosstable__score {
  flex: 0 0 auto;
  font-weight: bold;
}

.crosstable__score span {
  padding: 0 2vmin;
}

.crosstable__matchup {
  flex: 1 1 auto;
  font-weight: bold;
  background: #293a49;
}

.crosstable povs a {
  color: #999999;
  flex: 0 0 50%;
  transition: all 150ms;
}

.crosstable povs:hover a {
  background: #3b291d;
}

.crosstable povs.current a {
  background: #a1420a;
  color: #fff;
}

.crosstable povs.new {
  border: #404040;
}

@media (max-width: 649px) {
  .crosstable povs {
    display: none;
  }
  .crosstable povs:nth-last-child(-n+12) {
    display: flex;
  }
}

.crosstable .sep {
  border-left: 1px solid #404040;
  margin-left: .3em;
}

.crosstable .win {
  font-weight: bold;
  color: #629924;
}

.crosstable .loss {
  color: #cc3333;
}

.crosstable .unavailable {
  margin-top: 40px;
  opacity: 0.7;
}

.flash {
  margin: 1em 0 2em 0;
}

.flash__content {
  padding: 1em 2em;
  background: #629924;
  color: #fff;
}

.flash__content::before {
  content: 'E';
  margin-right: 1em;
  font-size: 1.5em;
}

.flash__content a {
  color: #fff;
}

.flash-warning .flash__content {
  background: #bf811d;
  color: #fff;
}

.flash-warning .flash__content::before {
  content: 'î€…';
}

.flash-failure .flash__content {
  background: #cc3333;
  color: #fff;
}

.flash-failure .flash__content::before {
  content: 'j';
}

body ::-webkit-scrollbar,
body ::-webkit-scrollbar-corner {
  width: .5rem;
  background: #262421;
}

body ::-webkit-scrollbar-thumb {
  background: #4d4d4d;
}

body ::-webkit-scrollbar-thumb:hover,
body ::-webkit-scrollbar-thumb:active {
  background: #6b6b6b;
}

.game-row {
  display: flex;
  align-items: stretch;
  height: 17rem;
  padding: .5em 1em;
  border-bottom: 1px solid #404040;
  position: relative;
  transition: background 150ms;
}

.game-row:nth-child(odd) {
  background: #302e2c;
}

.game-row:hover {
  background: #293a49;
}

.game-row__board {
  flex: 0 0 16rem;
  margin-right: 1em;
}

@media (max-width: 799px) {
  .game-row__board {
    display: none;
  }
}

.game-row__infos {
  flex: 1 1 100%;
  display: flex;
  flex-flow: column;
  justify-content: space-between;
  margin: .5em 0;
}

.game-row .header::before {
  font-size: 3em;
  opacity: 0.7;
  margin-right: .7rem;
}

.game-row .header__text strong {
  font-weight: normal;
  font-size: 1.4em;
  text-transform: uppercase;
  display: block;
}

.game-row .versus {
  display: flex;
  justify-content: center;
  align-items: center;
}

.game-row .versus .swords {
  width: 2.5em;
  text-align: center;
  font-size: 2em;
  opacity: 0.7;
}

.game-row .versus .player {
  font-size: 1.3em;
  text-align: right;
}

.game-row .versus .player.black {
  text-align: left;
}

.game-row .versus a {
  font-weight: bold;
  position: relative;
  z-index: 3;
}

.game-row .versus .anon {
  line-height: 2em;
}

.game-row .result {
  display: block;
  text-align: center;
}

.game-row .win {
  color: #629924;
}

.game-row .loss {
  color: #cc3333;
}

.sub-ratings a {
  padding: 0.7em 2vmin 0.7em 0.4em;
  white-space: nowrap;
  transition: all 150ms;
  cursor: default;
}

.sub-ratings a.empty {
  opacity: .5;
}

.sub-ratings a::before {
  font-size: 3em;
  opacity: .5;
  margin-right: .2em;
  transition: all 150ms;
}

.sub-ratings a.game {
  cursor: pointer;
}

.sub-ratings a.game:hover {
  background: #1e1d1a;
}

.sub-ratings a.game:hover::before {
  color: #3692e7;
  opacity: .7;
}

.sub-ratings a.game.active {
  background: #262421;
}

.sub-ratings a.game.active::before {
  color: #d64f00;
  opacity: .7;
}

.sub-ratings a > span {
  flex: 1 1 100%;
  margin-right: .5em;
}

.sub-ratings a rating span,
.sub-ratings a .rank {
  font-size: .9em;
}

.sub-ratings a i {
  font-size: .75em;
  opacity: .2;
  color: #999999;
  transition: all 150ms;
}

.sub-ratings a:hover i {
  color: #3692e7;
  opacity: .7;
}

.sub-ratings a.active i {
  display: none;
}

.sub-ratings a .shy {
  font-size: .8em;
  opacity: 0.6;
  line-height: 1em;
}

.sub-ratings h3 {
  font-size: 1.1em;
  text-transform: uppercase;
  letter-spacing: .05em;
  margin: 0;
  display: inline-block;
}

.sub-ratings strong {
  color: #999999;
  font-weight: bold;
  font-size: 1.2em;
}

@media (max-width: 979px) {
  .sub-ratings a {
    padding: .3em;
  }
  .sub-ratings a > i,
  .sub-ratings h3,
  .sub-ratings rating .rp,
  .sub-ratings rating span {
    display: none;
  }
}

@media (max-width: 799px) {
  .sub-ratings {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(9ch, 1fr));
  }
  .sub-ratings br, .sub-ratings .rank {
    display: none;
  }
  .sub-ratings a {
    display: flex;
    justify-content: center;
  }
  .sub-ratings a::before {
    opacity: .8;
    font-size: 1.5em;
  }
  .sub-ratings a > span {
    flex: 0 0 auto;
    margin-right: 0;
  }
  .sub-ratings a strong {
    font-weight: normal;
  }
}

.user-show__header {
  background: #302e2c;
  padding: 2em 1.5em 1em 1.5em;
  flex-flow: row nowrap;
}

.user-show__header h1 {
  flex: 0 0 auto;
  font-size: 2em;
  margin-top: 0;
}

.user-show__header .connected {
  color: #629924;
}

.user-show__header .closed {
  color: #cc3333;
  font-weight: bold;
  margin-right: 1em;
}

.user-show__header .line {
  vertical-align: top;
}

.trophies {
  position: absolute;
  top: 35px;
  right: 1.5em;
  height: 40px;
  display: flex;
  flex-flow: row wrap;
  align-items: flex-start;
  justify-content: flex-end;
  margin-top: 0 !important;
}

@media (max-width: 799px) {
  .trophies {
    display: none;
  }
}

.trophy.award {
  font-family: 'lichess';
  speak: none;
  line-height: 100%;
}

.trophy {
  display: flex;
  align-items: flex-end;
  height: 40px;
}

.trophy img {
  height: 80px;
}

.trophy.top1 {
  filter: drop-shadow(0 0 6px #bf811d);
}

.trophy, .shield-trophy {
  transition: transform 0.2s;
}

.trophy:not(.patron):hover, .shield-trophy:not(.patron):hover {
  transform: translateY(-3px);
}

.stacked {
  height: 40px;
  display: flex;
  align-items: flex-end;
}

.stacked .trophy {
  width: 65px;
  height: 65px;
  font-size: 65px;
}

.fire-trophy {
  opacity: 0.9;
  height: 80px;
  position: relative;
}

.fire-trophy, .fire-trophy:hover {
  color: #cccccc;
}

.fire-trophy:hover {
  opacity: 1;
}

.fire-trophy.marathonWinner, .fire-trophy.marathonTopTen, .fire-trophy.marathonTopFifty, .fire-trophy.marathonTopHundred {
  filter: hue-rotate(190deg);
  color: #998b85;
}

.fire-trophy.marathonTopTen {
  font-size: 58px;
  width: 55px;
  height: 55px;
  margin-top: 22px;
}

.fire-trophy.marathonTopFifty, .fire-trophy.marathonTopHundred {
  font-size: 50px;
  height: 50px;
  width: 50px;
  margin-top: 30px;
  animation: none;
}

.fire-trophy.marathonTopFifty {
  text-shadow: 0 0 5px #ffae34, 0 0 6.25px #ec760c, 0 0 7.5px #cd4606;
}

.fire-trophy.marathonTopHundred {
  text-shadow: none;
  color: #cd4606 !important;
}

.fire-trophy.bongcloudWarrior {
  filter: hue-rotate(70deg);
}

.packed .trophy {
  margin-right: -8px;
}

.packed .stacked {
  margin-right: 30px;
}

.packed .stacked .trophy {
  margin-right: -30px;
}

.trophy.icon3d {
  width: 40px;
  height: 40px;
  font-size: 39px;
  color: #6b6b6b;
  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);
}

.trophy.streaming {
  color: #bf811d;
  animation: fire-trophy 1.25s ease-in-out infinite alternate;
}

.trophy.patron {
  flex: 0 0 auto;
  font-size: 60px;
  margin: 0 -10px 0 30px;
  transform: scale(-1, 1);
  color: #bf811d;
  transition: margin-top 0.5s;
}

.trophy.patron:hover {
  animation: fire-trophy 1.25s ease-in-out infinite alternate;
}

.combo-trophy {
  width: 60px;
  height: 60px;
  background-size: contain;
  background-repeat: no-repeat;
  font-family: 'lichess';
  text-align: center;
}

.shield-trophy {
  width: 50px;
  background-image: url(../images/trophy/shield-gold.png);
  font-size: 30px;
  line-height: 60px;
  color: #333 !important;
  text-shadow: 0 0 6px #fff;
  margin-top: -20px;
  filter: drop-shadow(0 0 6px #bf811d);
}

.revol_trophy {
  background-image: url(../images/trophy/round-star.png);
  font-size: 24px;
  line-height: 68px;
  color: #fff !important;
  text-shadow: 0 0 4px #444;
  margin-top: -18px;
}

#us_profile {
  border-top: 1px solid #404040;
}

#us_profile .warning {
  padding: .7em;
  background: #372623;
  border: 1px solid #582927;
  color: #cc3333;
}

#us_profile .warning span {
  margin-right: .2em;
  font-size: 2.7em;
}

#us_profile .engine_warning {
  margin: 10px 0;
}

#us_profile .rating-history {
  flex: 1 1 58%;
  margin: -10px 0 -14px -8px;
  height: 350px;
}

#us_profile .rating-history .spinner {
  width: 90px;
  height: 90px;
  margin: 120px auto 0 auto;
}

#us_profile .profile-side {
  flex: 1 0 300px;
  height: 332px;
  border-left: 1px solid #404040;
  overflow: hidden;
}

#us_profile .country img {
  vertical-align: text-bottom;
  margin: 0 .3em;
}

#us_profile .user-infos {
  overflow-y: auto;
  flex: 1 1 auto;
  padding: .8em;
  overflow: auto;
}

@media (hover: hover) {
  #us_profile .user-infos {
    overflow: hidden;
  }
  #us_profile .user-infos:hover {
    overflow-y: auto;
  }
}

#us_profile .insight {
  /* no point linking to insights on devices that can't properly display it */
  flex: 0 0 auto;
  padding: .3em 1em;
  border-top: 1px solid #404040;
  color: #3692e7;
}

@media (max-width: 979px) {
  #us_profile .insight {
    display: none;
  }
}

#us_profile .insight strong {
  display: block;
  font-weight: normal;
  font-size: 1.5em;
}

#us_profile .insight em {
  display: block;
}

#us_profile .insight::before {
  font-size: 2.5em;
  margin-right: 1rem;
}

#us_profile .insight:hover, #us_profile .insight:hover::before {
  transition: all 150ms;
  background: #3692e7;
  color: #fff;
}

#us_profile .col2 {
  display: flex;
  flex-flow: row wrap;
}

#us_profile .col2 > a {
  flex: 0 0 50%;
}

#us_profile .bio {
  font-style: italic;
}

#us_profile .bio img {
  max-width: 100%;
}

.number-menu {
  background: #302e2c;
  display: flex;
  user-select: none;
}

.number-menu .nm-item {
  flex: 1 1 auto;
  color: #bababa;
  text-align: center;
  line-height: 1.4em;
  padding: .5em 5px;
  text-transform: capitalize;
  white-space: normal;
  font-size: .9em;
}

.number-menu .nm-item:hover {
  color: #3692e7;
}

.number-menu--tabs .nm-item {
  margin-top: .7em;
  padding-bottom: .8em;
  transition: all 150ms;
  border-bottom: 1px solid #404040;
}

.number-menu--tabs .nm-item:first-child {
  border-top-left-radius: 0;
  border-left: 0 !important;
}

.number-menu--tabs .nm-item:last-child {
  border-top-right-radius: 0;
  border-right: 0 !important;
}

.number-menu--tabs .nm-item:hover {
  background: #282f35;
  color: #cccccc;
}

.number-menu--tabs .nm-item.active {
  color: #cccccc;
  border: 1px solid #404040;
  border-bottom: 0;
  background: #262421;
}

.number-menu strong {
  font-weight: normal;
  font-size: 1.1em;
}

.note-zone {
  display: none;
  margin: 1em 1.5em;
  padding-bottom: 1em;
}

.note-zone textarea {
  width: 100%;
  height: 5em;
}

.note-zone .note {
  padding-top: 1em;
  border-top: 1px solid #404040;
  margin-top: 1em;
}

.note-zone .note__meta {
  text-align: right;
  margin: 0 1em;
  white-space: nowrap;
}

.note-zone .note__text {
  flex: 1 1 auto;
  min-height: 2.7em;
}

.activity section {
  font-size: 1.2em;
  margin-left: 1rem;
  padding-top: 1rem;
}

.activity section h2 {
  color: #bf811d;
  font-size: 1.2em;
}

.activity section h2 time {
  font-weight: bold;
  text-transform: uppercase;
  background: #262421;
}

.activity .entries {
  margin-top: 0;
  padding-top: 10px;
  position: relative;
}

.activity .entry {
  padding: 1em 0 1em;
}

.activity .entry > i {
  font-size: 24px;
  float: left;
  width: 50px;
  height: 50px;
  margin-top: -10px;
  margin-left: -72px;
  line-height: 39px;
  text-align: center;
  background-color: #a87626;
  border: 3px solid #262421;
  border-radius: 50%;
  color: #fff;
}

@media (min-width: 500px) {
  .activity .entries {
    margin: 30px 50px 0 50px;
    border-left: 3px solid #a87626;
  }
  .activity .entry {
    padding-left: 45px;
  }
}

.activity .sub {
  margin: 3px 0;
  font-size: 1rem;
}

.activity .sub:last-child {
  margin-bottom: -7px;
}

.activity .sub > div {
  overflow: hidden;
}

.activity .line .more {
  flex: 0 1 auto;
}

.activity .line a {
  color: #bababa;
}

.activity .line a:hover {
  color: #3692e7;
}

.activity rating {
  margin-left: .7em;
}

.activity rating .rp {
  margin-left: .2em;
}

.activity score {
  float: right;
  font-size: .7em;
  margin-top: 2px;
}

.activity score > * {
  margin-left: 8px;
}

.activity score strong {
  color: #fff;
  font-size: 1.2em;
  padding: 1px 6px;
  display: inline-block;
  text-align: center;
  opacity: .7;
}

.activity .sub score strong {
  line-height: 1.6em;
  padding: 1px 4px;
}

.activity win strong {
  background: #629924;
}

.activity draw strong {
  background: #bf811d;
}

.activity loss strong {
  background: #cc3333;
}

.user-show .number-menu .to-playing {
  color: #d64f00;
}

.user-show .number-menu .to-playing strong {
  font-weight: bold;
}

.user-show .now-playing {
  grid-template-columns: repeat(auto-fill, minmax(250px, auto));
}

.page-menu {
  /* for the trophies. This glorious hack bypasses the .user-show overflow: hidden */
  position: relative;
}

.user-show {
  overflow: hidden;
  /* this fixes profile overflow, but cuts out the trophies */
}

.user-show__social {
  background: #302e2c;
}

.user-show__social .number-menu {
  margin: 0 0 .2em 1em;
}

.user-show__social .user-actions {
  margin: 1em;
}

.user-show__social .user-actions form {
  display: inline;
}

.user-show__social .relation-actions {
  border-right: 1px solid #404040;
}

.user-show .claim-title {
  border-top: 1px solid #404040;
}

.user-show .claim-title h2 {
  font-size: 1.5em;
  margin-bottom: 1em;
}

.user-show .claim-title form {
  margin: 3em 0 1em 0;
}

.user-show .crosstable {
  margin: 2em 1em;
  width: auto;
}

.user-show .new-player {
  padding: 1.5em;
  overflow-y: scroll;
}

.user-show .new-player h2 {
  font-size: 1.5em;
}

.user-show .new-player p {
  margin: 1em 0;
}

.user-show .new-player li {
  list-style: disc inside;
  line-height: 1.5em;
}

.user-show .number-menu .to-games.active,
.user-show #games.number-menu {
  background: #3c3934 !important;
}

.user-show .angles {
  font-size: 1.2em;
  height: 4rem;
  border-top: 1px solid #404040;
}

.user-show .angles .nm-item {
  justify-content: center;
}

.user-show .angles .unread {
  margin-left: .5em;
}

.user-show .activity {
  margin-bottom: 2em;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
