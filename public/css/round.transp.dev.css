/* Colors */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* text over primary background */
/* Secondary: green */
/* text over secondary background */
/* Accent: orange */
/* text over accent background */
/* Brag: gold */
/* text over brag background */
/* Error: red */
/* text over brag background */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Fancy: pink */
/* text over brag background */
/* Borders */
/* Shadows */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* Secondary: green */
/* Brag: gold */
/* Fancy: pink */
/* Good: green */
/* Warn: orange */
/* Bad: red */
.chat__members, .rclock .tour-rank, .round__now-playing .now-playing {
  text-shadow: 0.5px 1px 1px #000;
}

/* Common imports for all CSS modules */
/* Widths */
/* Heights */
/* Orientations */
/* Capabilities */
/* Aliases */
/* Uniboard: keep the same page layout accross pages */
/* when the width is appropriate for col1, but landscape prevents it */
/* atm only chrome supports min-content, max-content */
.piece-letter .rmoves m2, .rmoves .piece-letter m2 {
  font-family: 'Noto Sans';
}

.mchat__tab, .mchat__messages a:not(.user-link), .game__tournament .clock, .rclock .time, .rmoves index {
  font-family: 'Roboto';
}

.rmoves m2 {
  font-family: 'Noto Chess', 'Noto Sans';
}

/* text printed directly on the page background deserves special treatment (transp theme) */
.chat__members, .rclock .tour-rank, .round__now-playing .now-playing {
  color: #f7f7f7;
}

.crosstable__users, .crosstable__score, .cmn-toggle + label::after, .rcontrols .rematch.fbt, #powerTip .forecast-info .title {
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.5) 100%);
}

.cmn-toggle:hover + label::after {
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.55) 100%);
}

.variant-racingKings .cg-wrap.cg-wrap cg-container::before {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
}

.fbt {
  background: none;
  border: none;
  outline: none;
  color: #cccccc;
}

.mchat__tab input {
  -webkit-appearance: none;
  background: #161512;
  border: 1px solid rgba(0, 0, 0, 0.5);
  display: inline-block;
  padding: .5em;
}

.mchat__tab input:checked {
  background: #3b5c16;
  border-color: #4f7a1d;
}

.cmn-toggle:focus + label::before, .cmn-toggle:hover + label::before {
  box-shadow: 0 0 12px #b0b0b0;
}

.context-streamer, .mchat__tab {
  white-space: nowrap;
  overflow: hidden;
}

.mchat__tab span, .game__meta .user-tv {
  white-space: nowrap;
}

.mchat__messages {
  overflow-wrap: break-word;
  word-break: break-word;
}

.mchat__tab span, .game__meta .user-tv, .crosstable__users, .ruser a {
  overflow: hidden;
  text-overflow: ellipsis;
}

#promotion-choice {
  position: absolute;
  width: 100%;
  height: 100%;
}

.expiration, .rclock .tour-rank,
.rclock .moretime,
.rclock .berserked, .rcontrols .suggestion, .round__now-playing .switcher {
  /* extends %flex-wrap */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}

.context-streamer, .game__meta__infos, .ruser .line, .rcontrols .pending, .rcontrols .negotiation, .rcontrols .rematch-decline, .keyboard-move {
  display: flex;
  flex-flow: row;
  align-items: center;
}

.round__now-playing h3 {
  /* extends %flex-center */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
}

.crosstable povs, .crosstable__users, .crosstable__score, .crosstable__matchup, .mchat, .mchat__content, .round__side, .rmoves, .rcontrols .follow-up {
  display: flex;
  flex-flow: column;
}

.mchat__tab input, .crosstable, .mchat, .game__meta, .now-playing a {
  border-radius: 3px;
}

.crosstable, .mchat, .game__meta {
  overflow: hidden;
  /* helps with clipping background into border-radius */
}

.crosstable .sep, .rcontrols .negotiation .accept {
  border-radius: 3px 0 0 3px;
}

.round__app__table, .rcontrols .negotiation .decline, .rcontrols .rematch-decline {
  border-radius: 0 3px 3px 0;
}

.mchat__tab, .rclock-top .time {
  border-radius: 3px 3px 0 0;
}

.context-streamer, .rclock-bottom .time {
  border-radius: 0 0 3px 3px;
}

.crosstable, .mchat, .game__meta, .context-streamer, .round__app__table, .rclock .time, .rmoves .buttons, .rcontrols .rematch-decline {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

coords {
  /* handle hidden coords */
  /* handle inner coords */
  position: absolute;
  display: flex;
  pointer-events: none;
  user-select: none;
  color: #fff;
  text-shadow: 0 1px 2px #000;
  font-weight: bold;
  /* negate inner coords colors */
}

.coords-no coords {
  display: none;
}

coords {
  font-size: 8px;
}

@media (min-width: 320px) {
  coords {
    font-size: calc(8px + 4 * ((100vw - 320px) / 880));
  }
}

@media (min-width: 1200px) {
  coords {
    font-size: 12px;
  }
}

coords.ranks {
  flex-flow: column-reverse;
  top: 1px;
  right: 0;
  height: 100%;
  width: .8em;
}

coords.ranks.black {
  flex-flow: column;
}

coords.files {
  bottom: 0px;
  left: 0;
  text-align: left;
  flex-flow: row;
  width: 100%;
  height: 1.4em;
}

coords.files.black {
  flex-flow: row-reverse;
}

coords.files coord {
  padding-left: 4px;
}

coords coord {
  flex: 1 1 auto;
}

coords .is3d .cg-wrap coords coord {
  color: #fff !important;
  text-shadow: 0 1px 2px #000 !important;
}

coords .is3d .cg-wrap coords.files {
  bottom: calc(1px - 2.5%);
}

coords .is3d .cg-wrap coords.files coord {
  padding-left: 3px;
}

.blue coord {
  text-shadow: none;
}

.blue .orientation-white .files coords:nth-child(2n+1),
.blue .orientation-white .ranks coords:nth-child(2n),
.blue .orientation-black .files coords:nth-child(2n),
.blue .orientation-black .ranks coords:nth-child(2n+1) {
  color: #DEE3E6;
}

.blue .orientation-white .files coord:nth-child(2n),
.blue .orientation-white .ranks coord:nth-child(2n+1),
.blue .orientation-black .files coord:nth-child(2n+1),
.blue .orientation-black .ranks coord:nth-child(2n) {
  color: #788a94;
}

.brown coord {
  text-shadow: none;
}

.brown .orientation-white .files coord:nth-child(2n+1),
.brown .orientation-white .ranks coord:nth-child(2n),
.brown .orientation-black .files coord:nth-child(2n),
.brown .orientation-black .ranks coord:nth-child(2n+1) {
  color: #F0D9B5;
}

.brown .orientation-white .files coord:nth-child(2n),
.brown .orientation-white .ranks coord:nth-child(2n+1),
.brown .orientation-black .files coord:nth-child(2n+1),
.brown .orientation-black .ranks coord:nth-child(2n) {
  color: #946f51;
}

.green coord {
  text-shadow: none;
}

.green .orientation-white .files coords:nth-child(2n+1),
.green .orientation-white .ranks coords:nth-child(2n),
.green .orientation-black .files coords:nth-child(2n),
.green .orientation-black .ranks coords:nth-child(2n+1) {
  color: #FFFFDD;
}

.green .orientation-white .files coord:nth-child(2n),
.green .orientation-white .ranks coord:nth-child(2n+1),
.green .orientation-black .files coord:nth-child(2n+1),
.green .orientation-black .ranks coord:nth-child(2n) {
  color: #6d8753;
}

/* handle outer coords */
@media (min-width: 800px), (orientation: landscape) {
  .coords-out coords {
    text-shadow: none;
  }
  .coords-out coords.ranks {
    right: -15px;
    top: 0;
    width: 12px;
  }
  .coords-out coords.ranks coord {
    transform: translateY(42%);
  }
  .coords-out coords.files {
    bottom: -15px;
    left: 0;
    text-align: center;
  }
  .coords-out coords coord {
    color: #f7f7f7 !important;
  }
}

body {
  --board-scale: 1;
}

@media (min-width: 800px) and (min-height: 500px) {
  body {
    --board-scale: calc((var(--zoom) / 100) * 0.7 + 0.3);
  }
}

@media (max-width: 799px) and (orientation: portrait) {
  body {
    --col1: 1;
  }
  .main-board cg-board {
    border-radius: 0;
  }
}

body.resizing {
  user-select: none;
}

cg-resize {
  display: none;
}

@media (min-width: 800px) {
  cg-resize {
    display: block;
    position: absolute;
    right: -9px;
    bottom: -9px;
    width: 22px;
    height: 22px;
    cursor: nwse-resize;
  }
  cg-resize::before, cg-resize::after {
    background: #000;
    content: '';
    position: absolute;
    width: 12px;
    height: 1px;
  }
  cg-resize::before {
    width: 5px;
    transform: translate(7px, 8px) rotate(-45deg);
  }
  cg-resize::after {
    transform: translate(1px, 6px) rotate(-45deg);
  }
  cg-resize:hover {
    border-radius: 50%;
    background: rgba(214, 79, 0, 0.5);
  }
  .resizing cg-resize {
    border-radius: 50%;
    background: rgba(98, 153, 36, 0.5);
  }
}

.color-icon.white::before {
  content: "J";
}

.color-icon.black::before {
  content: "K";
}

.color-icon.random::before {
  content: "l";
}

.crosstable__users {
  flex: 1 1 auto;
}

.crosstable {
  width: 100%;
  line-height: 1.9em;
  display: flex;
}

.crosstable fill,
.crosstable povs {
  background: rgba(0, 0, 0, 0.6);
  flex: 1 1 auto;
}

.crosstable povs, .crosstable__users, .crosstable__score, .crosstable__matchup {
  text-align: center;
}

.crosstable__users {
  max-width: 40vw;
  text-align: left;
}

.crosstable__users a {
  padding-left: 2vmin;
}

.crosstable__score {
  flex: 0 0 auto;
  font-weight: bold;
}

.crosstable__score span {
  padding: 0 2vmin;
}

.crosstable__matchup {
  flex: 1 1 auto;
  font-weight: bold;
  background: rgba(20, 54, 85, 0.68);
}

.crosstable povs a {
  color: #b0b0b0;
  flex: 0 0 50%;
  transition: all 150ms;
}

.crosstable povs:hover a {
  background: rgba(52, 19, 0, 0.648);
}

.crosstable povs.current a {
  background: rgba(181, 66, 0, 0.88);
  color: #fff;
}

.crosstable povs.new {
  border: #404040;
}

@media (max-width: 649px) {
  .crosstable povs {
    display: none;
  }
  .crosstable povs:nth-last-child(-n+12) {
    display: flex;
  }
}

.crosstable .sep {
  border-left: 1px solid #404040;
  margin-left: .3em;
}

.crosstable .win {
  font-weight: bold;
  color: #629924;
}

.crosstable .loss {
  color: #cc3333;
}

.crosstable .unavailable {
  margin-top: 40px;
  opacity: 0.7;
}

.fbt {
  text-transform: uppercase;
  line-height: 1.5;
  transition: all 150ms;
}

@media (hover: hover) {
  .fbt:hover:not(.disabled):not([disabled]) {
    background: rgba(86, 134, 31, 0.9);
    color: #fff;
  }
}

.fbt.active {
  background: #629924 !important;
  color: #fff;
}

.fbt.disabled, .fbt[disabled] {
  opacity: 0.5;
  cursor: default;
}

@keyframes glowing {
  42% {
    background: none;
  }
  50% {
    background: rgba(20, 54, 85, 0.68);
  }
  58% {
    background: none;
  }
}

.glowing {
  animation: glowing 2s ease-in-out infinite;
}

@keyframes bar-glider-anim {
  0% {
    transform: translateX(-1300px);
  }
  100% {
    transform: translateX(2100px);
  }
}

.bar-glider {
  position: relative;
  overflow: hidden;
}

.bar-glider::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 70px;
  background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.3));
  animation: bar-glider-anim 3s linear infinite;
}

.now-playing {
  display: grid;
  --np-min-width: 200px;
  grid-template-columns: repeat(auto-fill, minmax(var(--np-min-width), 1fr));
}

@media (max-width: 499px) {
  .now-playing {
    --np-min-width: 50%;
  }
}

.now-playing a {
  color: #cccccc;
  padding: .3em;
  transition: background 150ms;
  background: rgba(0, 0, 0, 0);
}

.now-playing a:hover {
  background: rgba(54, 146, 231, 0.4);
  color: #e3e3e3;
}

.now-playing .meta {
  display: block;
  text-align: center;
  overflow: hidden;
}

.now-playing .indicator {
  color: #d64f00;
  margin-top: -3px;
  display: block;
}

.now-playing cg-board {
  box-shadow: none;
}

.context-streamer {
  height: 2.2em;
  color: #fff !important;
  background: #44641d;
  transition: all 150ms;
}

.context-streamer::before {
  font-size: 1.3em;
  margin-left: .4em;
}

.context-streamer:hover {
  background: #537e20;
}

.cmn-toggle {
  position: absolute;
  margin-left: -99999px;
}

.cmn-toggle + label {
  display: block;
  position: relative;
  cursor: pointer;
  outline: none;
  -webkit-user-select: none;
  -moz-user-select: none;
}

.cmn-toggle + label {
  padding: 1px;
  width: 40px;
  height: 24px;
  background-color: #404040;
  border-radius: 24px;
}

.cmn-toggle + label::before,
.cmn-toggle + label::after {
  display: block;
  position: absolute;
  top: 1px;
  left: 1px;
  bottom: 1px;
  content: "";
}

.cmn-toggle + label::before {
  right: 1px;
  background-color: #cc3333;
  border-radius: 24px;
}

.cmn-toggle--subtle + label::before {
  background-color: #7a7a7a;
}

.cmn-toggle:hover + label::before {
  transition: background 150ms;
}

.cmn-toggle + label::after {
  width: 22px;
  border-radius: 100%;
  box-shadow: 0 1px 2.5px rgba(0, 0, 0, 0.3);
}

.cmn-toggle:hover + label::after {
  transition: margin 150ms;
}

.cmn-toggle:checked + label::before {
  background-color: #629924;
}

.cmn-toggle:checked + label::after {
  margin-left: 16px;
}

.variant-racingKings .cg-wrap.cg-wrap cg-container::before {
  background: rgba(230, 230, 230, 0.2);
  width: 100%;
  height: 12.5%;
  content: '';
  position: absolute;
  left: 0;
  z-index: 1;
  pointer-events: none;
}

.variant-racingKings .cg-wrap.orientation-white cg-container::before {
  top: 0;
}

.variant-racingKings .cg-wrap.orientation-black cg-container::before {
  bottom: 0;
}

.variant-kingOfTheHill cg-container::before {
  width: 25%;
  height: 25%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.7);
  background: rgba(230, 230, 230, 0.2);
  content: '';
  position: absolute;
  top: 37.5%;
  left: 37.5%;
  z-index: 1;
  pointer-events: none;
}

#promotion-choice {
  background: rgba(22, 21, 18, 0.7);
  z-index: 205;
}

#promotion-choice square {
  cursor: pointer;
  border-radius: 50%;
  background-color: #b0b0b0;
  box-shadow: inset 0 0 25px 3px #808080;
  transition: all 150ms;
}

#promotion-choice piece {
  pointer-events: auto;
  opacity: 1;
  /* cancels blindfold */
}

.is2d #promotion-choice piece {
  width: 100%;
  height: 100%;
  transition: all 150ms;
  transform: scale(0.8);
}

#promotion-choice square:hover {
  box-shadow: inset 0 0 48px 8px #d64f00;
  border-radius: 0%;
}

.is2d #promotion-choice square:hover piece {
  transform: none;
}

.blindfold.main-board piece,
.blindfold .now-playing piece {
  opacity: 0;
}

.blindfold.main-board .check {
  background: none;
}

body ::-webkit-scrollbar,
body ::-webkit-scrollbar-corner {
  width: .5rem;
  background: rgba(0, 0, 0, 0.6);
}

body ::-webkit-scrollbar-thumb {
  background: #4d4d4d;
}

body ::-webkit-scrollbar-thumb:hover,
body ::-webkit-scrollbar-thumb:active {
  background: #7a7a7a;
}

.mchat__tabs {
  flex: 0 0 auto;
  display: flex;
}

.mchat__tab {
  flex: 1 1 auto;
  text-align: center;
  padding: .4em 10px;
  cursor: pointer;
  color: #f7f7f7;
  transition: all 150ms;
}

.mchat__tab:hover {
  background: rgba(62, 23, 0, 0.66);
}

.mchat__tab-active {
  color: #cccccc;
  background: rgba(0, 0, 0, 0.6) !important;
}

.mchat__tab input {
  cursor: pointer;
  display: none;
}

.mchat__tab-active input {
  display: block;
}

.mchat__tab:last-child {
  border-right: none;
}

.mchat-optional .mchat__tab.discussion {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.chat__members {
  font-size: .9em;
  height: 100%;
  overflow: hidden;
}

.mchat__messages {
  flex: 1 1 auto;
  max-height: 50vh;
  overflow-y: auto;
  overflow-x: hidden;
  cursor: initial;
  font-size: .9em;
}

@media (min-width: 1260px) {
  .mchat__messages {
    max-height: none;
  }
}

.mchat__messages li {
  position: relative;
  padding: .5em 0 .5em 10px;
  line-height: 1.2em;
  overflow-y: hidden;
  user-select: text;
}

.mchat__messages .deleted {
  opacity: 0.5;
}

.mchat__messages .system {
  display: block;
  opacity: 0.8;
  font-style: italic;
  font-size: .9em;
  margin-left: 0;
  text-align: center;
}

.mchat__messages .color,
.mchat__messages .user-link {
  font-weight: bold;
  padding: 0;
  color: #b0b0b0;
  letter-spacing: -1px;
  margin-right: .4em;
}

.mchat__messages .title {
  margin-right: 3px;
}

.mchat__messages i {
  display: none;
  position: absolute;
  top: 5px;
  right: 0;
  cursor: pointer;
  margin-right: 3px;
  padding: 4px 5px;
  opacity: 0.7;
  color: #d64f00;
}

.mchat__messages i:hover {
  opacity: 1;
}

.mchat__messages li:hover i {
  display: block;
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.6), 0 0 5px rgba(0, 0, 0, 0.6), 0 0 10px rgba(0, 0, 0, 0.6);
}

.mchat__say {
  flex: 0 0 auto;
  border: 0;
  border-top: 1px solid #404040;
  border-radius: 0;
  padding: 3px 20px 3px 4px;
}

.mchat__say.whisper {
  color: #629924;
  font-weight: bold;
  font-style: italic;
}

@keyframes glowing {
  42% {
    background: none;
  }
  50% {
    background: rgba(20, 54, 85, 0.68);
  }
  58% {
    background: none;
  }
}

.glowing {
  animation: glowing 2s ease-in-out infinite;
}

@keyframes palantir-glowing {
  40% {
    background: none;
  }
  50% {
    background: rgba(49, 76, 18, 0.72);
  }
  60% {
    background: rgba(27, 73, 116, 0.72);
  }
  70% {
    background: none;
  }
}

.palantir {
  flex: 0 1 auto;
  animation: palantir-glowing 1.5s ease-in-out infinite;
  border-radius: 0 3px 0 0;
}

.palantir-slot {
  animation: none;
  opacity: .6;
}

.palantir-slot:hover {
  opacity: 1;
}

.palantir-off {
  animation: none;
}

.palantir-on {
  background: #629924;
  color: #fff;
  animation: none;
}

.palantir-on:hover {
  background: #cc3333 !important;
  color: #fff !important;
}

.palantir::after {
  top: 1px;
  left: 0;
  right: auto;
  background: none;
  box-shadow: none;
}

.mchat {
  grid-area: chat;
  justify-content: stretch;
  min-height: 15em;
}

.mchat__content {
  background: rgba(0, 0, 0, 0.6);
  flex: 1 1 auto;
  overflow: hidden;
}

.mchat__content.note textarea {
  font-size: .9em;
  flex-grow: 1;
  border: none;
  background-color: transparent;
  line-height: 1.7em;
  outline: none;
  resize: none;
}

.mchat__presets {
  display: flex;
  flex: 0 0 auto;
  align-items: center;
  flex-flow: row nowrap;
  line-height: 1.4em;
}

.mchat__presets span {
  flex: 1 1 auto;
  text-align: center;
  display: block;
  opacity: 0.8;
  border: 1px solid #404040;
  border-width: 1px 1px 0 0;
  font-size: .9em;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 150ms;
}

.mchat__presets span.disabled {
  background: rgba(62, 23, 0, 0.66);
  color: transparent;
  cursor: default;
}

.mchat__presets span:not(.disabled):hover {
  background: #d64f00;
  color: #fff;
  opacity: 1;
}

#main-wrap {
  --main-max-width: auto;
}

@media (max-width: 799px) and (orientation: portrait) {
  #main-wrap {
    --main-max-width: calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 100px - 2.5em);
  }
}

.round {
  grid-area: main;
  display: grid;
  grid-gap: 2vmin;
  grid-template-areas: 'app' 'under' 'side' 'uchat';
}

.round__app {
  grid-area: app;
}

.round__side {
  grid-area: side;
}

.round__underboard {
  grid-area: under;
}

.round__underchat {
  grid-area: uchat;
}

@media (min-width: 800px), (orientation: landscape) {
  .round {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto fit-content(0) fit-content(0);
    grid-template-areas: 'app   app' 'under side' 'under uchat';
  }
  .round__app {
    justify-self: center;
  }
}

@media (min-width: 1260px) {
  .round {
    grid-template-columns: minmax(230px, 20vw) minmax(calc(70vmin * var(--board-scale)), calc(100vh * var(--board-scale) - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) minmax(240px, 400px);
    grid-template-rows: fit-content(0);
    grid-template-areas: 'side  app   app' 'uchat under .';
  }
  .round .crosstable__users {
    flex: 7 1 auto;
  }
}

@media (max-width: 799px) and (orientation: landscape) {
  .round .crosstable {
    display: none;
  }
}

.rcontrols {
  grid-area: controls;
}

.material-top {
  grid-area: mat-top;
}

.material-bottom {
  grid-area: mat-bot;
}

.expiration-top {
  grid-area: expi-top;
}

.expiration-bottom {
  grid-area: expi-bot;
}

.ruser-top {
  grid-area: user-top;
}

.ruser-bottom {
  grid-area: user-bot;
}

.rclock-top {
  grid-area: clock-top;
}

.rclock-bottom {
  grid-area: clock-bot;
}

.rmoves {
  grid-area: moves;
}

.keyboard-move {
  grid-area: kb-move;
}

.round__app {
  display: grid;
}

@media (max-width: 799px) and (orientation: portrait) {
  .round__app {
    grid-template-rows: auto auto 50px auto min-content 50px auto;
    grid-template-areas: 'moves' 'mat-top' 'user-top' 'board' 'expi-bot' 'user-bot' 'mat-bot' 'kb-move' 'controls';
  }
  .round__app .rclock-top {
    grid-area: 3 / 1 / 3 / 2;
  }
  .round__app .rclock-bottom {
    grid-area: 6 / 1 / 6 / 2;
  }
  .round__app cg-board {
    box-shadow: none;
  }
  .round__app .expiration-top {
    display: none;
  }
  .round__app__table {
    display: none;
  }
  .round__app.move-confirm {
    grid-template-areas: 'controls' 'mat-top' 'user-top' 'board' 'expi-bot' 'user-bot' 'mat-bot' 'kb-move';
  }
  .round__app.move-confirm .rmoves {
    display: none;
  }
}

@media (min-width: 800px), (orientation: landscape) {
  .round__app {
    grid-template-columns: minmax(calc(70vmin * var(--board-scale)), calc(100vh * var(--board-scale) - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) minmax(240px, 400px);
    grid-template-rows: 1fr auto auto min-content auto auto auto auto min-content auto auto 1fr;
    grid-template-areas: 'board .' 'board mat-top' 'board clock-top' 'board expi-top' 'board user-top' 'board moves' 'board controls' 'board user-bot' 'board expi-bot' 'board clock-bot' 'board mat-bot' 'board .' 'kb-move .';
    grid-column-gap: 2vmin;
  }
  .round__app__table {
    grid-area: 4 / 2 / 10 / 3;
  }
  .round__app .expiration-top {
    display: flex;
  }
  .round__app .rmoves {
    margin-bottom: 0;
  }
  .round__app .rmoves .moves {
    display: none;
    background: none;
  }
  .round__app .keyboard-move {
    margin-top: 2vmin;
  }
}

@media (min-width: 800px) and (min-height: 500px), (orientation: landscape) and (min-height: 500px) {
  .round__app .rmoves .moves {
    display: flex;
  }
}

@media (max-width: 799px) and (orientation: landscape) {
  .round__app {
    grid-template-columns: minmax(calc(55vmin), calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 2vmin)) minmax(200px, 240px);
    grid-column-gap: 3vmin;
  }
}

.round__app__board {
  grid-area: board;
}

body.playing.zen .round__underboard, body.playing.zen .round__underchat, body.playing.zen #friend_box,
body.playing.zen .site-title-nav,
body.playing.zen .site-buttons, body.playing.zen .round__side, body.playing.zen .mchat, body.playing.zen .ruser, body.playing.zen .rclock .tour-rank, .rclock body.playing.zen .tour-rank,
body.playing.zen .rclock .moretime, .rclock body.playing.zen .moretime,
body.playing.zen .rclock .berserked, .rclock body.playing.zen .berserked, body.playing.zen .rmoves .moves, .rmoves body.playing.zen .moves {
  display: none;
}

#zentog {
  position: absolute;
  padding: .5em 1em;
  opacity: 0.5;
  z-index: 110;
  display: none;
  border-bottom-right-radius: 3px;
}

body.playing.zen #zentog {
  display: block;
}

#zentog:hover {
  opacity: 1;
}

body.playing.zen .ricons {
  margin: .5em 0 1em 0;
}

body.playing.zen #top {
  justify-content: center;
}

.round__side .game__meta {
  flex: 0 0 auto;
}

.round__side .game__meta__players .team {
  margin-left: 1.7em;
}

.mchat {
  flex: 1 1 0;
  margin-top: 2vmin;
}

/* shared with analysis */
.game__meta {
  background: rgba(0, 0, 0, 0.6);
  padding: 1.4vmin 2vmin;
}

.game__meta section:not(:last-child) {
  border-bottom: 1px solid #404040;
  margin-bottom: 1.33333vmin;
  padding-bottom: 1.33333vmin;
}

.game__meta__infos {
  position: relative;
  /* for bookmark */
}

.game__meta__infos::before {
  font-size: 3rem;
  margin-right: 4%;
}

.game__meta__infos p {
  margin: 0;
}

.game__meta__infos time {
  opacity: 1;
}

.game__meta .status {
  text-align: center;
}

.game__meta__players {
  margin-top: .3rem;
  font-size: 90%;
}

.game__meta .bookmark {
  position: absolute;
  right: 0;
  z-index: 2;
  color: #b0b0b0;
}

.game__meta .bookmark ::before {
  font-size: 1.3em;
}

.game__meta .bookmark:not(.bookmarked) .on,
.game__meta .bookmark.bookmarked .off {
  display: none;
}

.game__meta .user-tv {
  font-size: 1.2em;
}

.game__tournament .clock {
  font-size: 2em;
  text-align: center;
  margin-top: .2em;
}

@media (hover: hover) {
  .game__meta .bookmark {
    display: none;
  }
  .game__meta:hover .bookmark {
    display: block;
  }
}

.round__app__table {
  background: rgba(0, 0, 0, 0.6);
}

.round__app .draw-yes::before,
.round__app .draw-yes span::before {
  transform: translateY(-1px) rotate(-90deg);
  display: inline-block;
  /* somehow that's required */
}

.expiration {
  font-size: .9rem;
  justify-content: center;
  line-height: 2;
  background: #629924;
  color: #fff;
}

.expiration-top {
  border-top-right-radius: 3px;
}

.expiration-bottom {
  border-bottom-right-radius: 3px;
}

.expiration.emerg {
  background: #cc3333;
}

.expiration strong {
  font-size: 1rem;
  margin-right: .3em;
}

.ruser {
  display: flex;
  justify-content: left;
  font-size: 1.2em;
  padding: 0 .3em;
  line-height: 50px;
}

.ruser:hover {
  color: #cccccc;
}

.ruser a {
  color: #cccccc;
}

.ruser.long a {
  letter-spacing: -0.5px;
}

.ruser rating {
  flex: 0 0 auto;
  margin: 0 .25em 0 .3em;
  color: #b0b0b0;
  letter-spacing: -0.5px;
}

.ruser .line {
  justify-content: center;
}

@keyframes connecting {
  0% {
    opacity: 0.1;
  }
  50% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.1;
  }
}

.ruser.connecting .line {
  animation: connecting 0.9s ease-in-out infinite;
}

.ruser .rp {
  margin-right: .2em;
}

@media (min-width: 800px), (orientation: landscape) {
  .ruser {
    padding: .5em .5em .5em .3em;
    line-height: inherit;
  }
  .ruser a {
    flex: 1 1 auto;
  }
}

.rclock {
  position: relative;
  display: flex;
  justify-content: flex-end;
  user-select: none;
  /* overflow: hidden; is not possible because of clock bars and shadows */
}

@media (max-width: 799px) and (orientation: portrait) {
  .rclock {
    /* that weird shit is required so the clock goes above the player since they share the same grid cell */
    justify-self: flex-end;
    z-index: 1;
  }
}

@media (min-width: 800px), (orientation: landscape) {
  .rclock {
    justify-content: space-between;
  }
  .rclock-bottom {
    /* over the table shadow */
    z-index: 0;
  }
}

.rclock-turn {
  align-self: center;
  line-height: 50px;
}

@media (max-width: 799px) and (orientation: portrait) {
  .rclock-turn__text {
    background: rgba(0, 0, 0, 0.6);
    padding: 0 2vmin;
    font-weight: bold;
    white-space: nowrap;
  }
}

@media (min-width: 800px), (orientation: landscape) {
  .rclock-turn {
    height: 2.2em;
    line-height: 2.2em;
  }
}

.rclock .bar {
  display: none;
}

.rclock .bar.berserk {
  background: #cc3333;
}

@media (min-width: 800px), (orientation: landscape) {
  .rclock .bar {
    display: block;
    position: absolute;
    width: 100%;
    height: 4px;
    background: #629924;
    transform-origin: left;
  }
  .with-expiration .rclock .bar {
    display: none;
  }
  .rclock-top .bar {
    bottom: -4px;
  }
  .rclock-bottom .bar {
    top: -4px;
  }
}

.rclock .time {
  background: rgba(0, 0, 0, 0.6);
  min-width: 3em;
  font-size: 2.8em;
  line-height: 50px;
  font-weight: bold;
  padding: 0 2vmin;
  white-space: nowrap;
  /* ensure updates don't redraw other parts of the document */
  will-change: transform;
  z-index: -1;
  display: flex;
}

.rclock .time.hour {
  font-size: 2.3em;
}

@media (max-width: 799px) and (orientation: portrait) {
  .rclock .time {
    border-radius: 0;
    box-shadow: none;
  }
}

@media (min-width: 800px), (orientation: landscape) {
  .rclock .time {
    align-items: flex-end;
    line-height: 1.2em;
  }
}

@media (min-width: 500px) and (min-height: 600px) {
  .rclock .time {
    font-size: 3.5em;
    letter-spacing: .12em;
  }
  .rclock .time.hour {
    font-size: 2.9em;
    letter-spacing: .1em;
  }
}

.rclock-correspondence .time {
  font-size: 1.6em;
  letter-spacing: inherit;
}

@media (min-width: 800px), (orientation: landscape) {
  .rclock-correspondence .time {
    line-height: 1.5em;
  }
}

@media (min-width: 500px) {
  .rclock-correspondence .time {
    font-size: 1.9em;
  }
}

.rclock tenths {
  font-size: 70%;
  margin-bottom: -.18em;
}

.rclock huns {
  font-size: 80%;
}

@media (max-width: 799px) and (orientation: portrait) {
  .rclock huns {
    display: none;
    /* since clock is right-aligned, huns shift it left on every move */
  }
}

.rclock sep {
  opacity: 0.5;
  font-size: .8em;
}

.rclock sep.low {
  opacity: 0.15;
}

.rclock.running .time {
  background: rgba(49, 76, 18, 0.72);
  color: #f7f7f7;
}

.rclock.emerg .time,
.rclock.outoftime .time {
  background-color: rgba(89, 22, 22, 0.7);
}

.rclock.emerg.running .time {
  background-color: rgba(143, 36, 36, 0.8);
  color: #f7f7f7;
}

.rclock .go-berserk {
  font-size: 2.2em;
  padding: 0 .3em;
}

.rclock .go-berserk:hover {
  color: #d64f00 !important;
  background: none !important;
}

.rclock .tour-rank,
.rclock .moretime,
.rclock .berserked {
  display: none;
}

@media (min-width: 500px) {
  .rclock .tour-rank,
  .rclock .moretime,
  .rclock .berserked {
    order: -1;
    display: flex;
    flex: 0 1 auto;
    font-size: 1.7em;
    padding: 0 .3em;
  }
}

@media (min-width: 800px), (orientation: landscape) {
  .rclock .tour-rank,
  .rclock .moretime,
  .rclock .berserked {
    order: inherit;
  }
}

.rclock .tour-rank {
  opacity: .65;
}

.rclock .moretime {
  opacity: 0.4;
}

.rclock .moretime:hover {
  opacity: 1;
}

.rclock .berserked {
  font-size: 2.2em;
  color: #d64f00;
}

.material {
  align-self: center;
  display: none;
  height: 40px;
}

@media (min-width: 800px), (orientation: landscape) {
  .material {
    display: flex;
    align-items: center;
    line-height: 0;
    white-space: nowrap;
  }
  .material div {
    display: inline-block;
    margin-left: 10px;
  }
  .material mpiece {
    margin-left: -10px;
    width: 32px;
    height: 32px;
    background-size: cover;
    display: inline-block;
    filter: brightness(1.3) drop-shadow(0 1px 1px #000);
  }
  .material mpiece.pawn {
    background-image: url(../piece/mono/P.svg);
  }
  .material mpiece.bishop {
    background-image: url(../piece/mono/B.svg);
  }
  .material mpiece.knight {
    background-image: url(../piece/mono/N.svg);
  }
  .material mpiece.rook {
    background-image: url(../piece/mono/R.svg);
  }
  .material mpiece.queen {
    background-image: url(../piece/mono/Q.svg);
  }
  .material mpiece.king {
    background-image: url(../piece/mono/K.svg);
  }
  .material score {
    font-family: 'Roboto';
    line-height: 32px;
    vertical-align: top;
  }
}

.rmoves {
  /* context: .rmoves */
  /* context: .rmoves */
}

.rmoves .buttons {
  flex: 0 0 auto;
  display: flex;
  justify-content: stretch;
  background: rgba(255, 255, 255, 0.05);
  font-size: .9em;
  order: 2;
}

@media (min-width: 800px), (orientation: landscape) {
  .rmoves .buttons {
    order: 0;
  }
}

.rmoves .fbt, .rmoves .noop {
  padding: 5px 0;
  flex: 0 0 calc(100% / 6);
  text-align: center;
}

.rmoves .moves,
.rmoves .message {
  flex: 0 0 auto;
}

.rmoves .moves,
.rmoves .message {
  flex: 0 0 7.4rem;
}

@media (max-width: 799px) and (orientation: portrait) {
  .rmoves {
    overflow: hidden;
  }
  .rmoves .col1-moves {
    flex: 0 0 2.5em;
    display: flex;
  }
  .rmoves .col1-moves .fbt {
    flex: 0 0 auto;
    padding: 0 1.3em;
    opacity: .7;
  }
  body.playing.zen .rmoves .col1-moves {
    display: none;
  }
  .rmoves .moves {
    flex: 1 1 100%;
    display: flex;
    align-items: stretch;
    white-space: nowrap;
    overflow-x: scroll;
    color: #f7f7f7;
    box-shadow: 0 4px 12px #000 inset;
  }
  .rmoves .moves::-webkit-scrollbar {
    height: 0px;
  }
  .rmoves .moves > :first-child {
    margin-left: auto !important;
  }
  .rmoves index,
  .rmoves m2,
  .rmoves .result-wrap {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 .3rem;
  }
  .rmoves index {
    padding-right: .15em;
  }
  .rmoves m2 {
    font-size: 1.1em;
    cursor: pointer;
  }
  .rmoves m2.active, .rmoves m2:hover {
    background: rgba(255, 255, 255, 0.05);
  }
  .rmoves m2.active {
    color: #f7f7f7;
  }
  .rmoves .buttons {
    display: none;
  }
  .rmoves .result {
    margin: 0;
    font-weight: bold;
    font-size: 1.1em;
  }
  .rmoves .message {
    flex: 0 0 2.5em;
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1.2;
  }
  .rmoves .message br {
    display: none;
  }
  .rmoves .message strong {
    margin-left: .5em;
  }
  .rmoves .message::before {
    margin-right: .3em;
  }
  body.playing.zen .rmoves .message {
    display: none;
  }
  .rmoves .status {
    display: none;
  }
}

@media (min-width: 800px), (orientation: landscape) {
  .rmoves {
    background: rgba(0, 0, 0, 0.6);
  }
  .rmoves .moves {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    position: relative;
    /* required by autoScroll */
    overflow-y: auto;
    align-content: flex-start;
    will-change: scroll-position;
    user-select: none;
    line-height: 1.7;
    font-size: 1.1em;
  }
  .rmoves .moves::-webkit-scrollbar {
    width: 0px;
  }
  .rmoves index {
    /* Edge 18: flex: 0 0 calc(100% / 6); causes wrap */
    flex: 0 0 16.666%;
    display: flex;
    justify-content: center;
    align-items: flex-end;
    background: rgba(255, 255, 255, 0.05);
  }
  .rmoves m2 {
    /* Edge 18: flex: 0 0 calc(100% * 5 / 12); causes wrap */
    flex: 0 0 41.666%;
    padding-left: .7em;
    cursor: pointer;
  }
  .rmoves m2:hover {
    background: #3692e7;
    color: #fff;
  }
  .rmoves m2.active {
    font-weight: bold;
    background: rgba(20, 54, 85, 0.68);
    color: #e3e3e3;
  }
  .rmoves .message {
    display: flex;
    align-items: center;
    margin: 1em;
  }
  .rmoves .message::before {
    color: #b0b0b0;
    font-size: 3em;
    margin-right: 12px;
  }
  .rmoves .result-wrap {
    width: 100%;
    text-align: center;
  }
  .rmoves .result {
    border-top: 1px solid #404040;
    font-weight: bold;
    font-size: 1.2em;
    padding: 5px 0 3px 0;
    margin: 0;
  }
  .rmoves .status {
    font-style: italic;
    margin-bottom: .5em;
  }
}

.rcontrols {
  text-align: center;
  width: 100%;
}

.rcontrols p {
  margin: 0;
}

.rcontrols .disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.rcontrols .ddloader {
  margin: 20px auto 10px auto;
}

.rcontrols .suggestion,
.rcontrols .pending,
.rcontrols .negotiation {
  padding: .5em 3%;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid #404040;
  border-width: 0 1px;
}

.rcontrols .suggestion {
  justify-content: space-around;
}

.rcontrols .suggestion p {
  width: 100%;
}

.rcontrols .suggestion .button {
  margin: .5em 0 0 0;
}

.rcontrols .pending p {
  flex: 3 1;
  margin-right: 7px;
}

.rcontrols .pending .button {
  flex: 1 1;
}

.rcontrols .negotiation {
  background: #d64f00;
  color: #fff;
}

.rcontrols .negotiation p {
  flex: 1 1 auto;
  margin-right: 7px;
}

.rcontrols .negotiation a {
  flex: 0 0 3rem;
  font-size: 1.5em;
  line-height: 1.7em;
  background: rgba(0, 0, 0, 0.6);
}

.rcontrols .negotiation .accept {
  color: #629924;
  margin-right: 1px;
}

.rcontrols .negotiation .decline {
  color: #cc3333;
}

.rcontrols .negotiation a:hover {
  color: #fff;
  background: #629924;
}

.rcontrols .negotiation a.decline:hover {
  background: #cc3333;
}

@media (max-width: 799px) and (orientation: portrait) {
  .rcontrols .negotiation {
    padding: 3px;
  }
  .rcontrols .negotiation a {
    line-height: 1.6em;
    flex: 0 0 2.5rem;
    padding: 0 1.2em;
  }
}

.rcontrols .glowing:hover {
  animation: none;
}

.rcontrols .follow-up {
  border-bottom: 1px solid #404040;
  position: relative;
  /* for rematch-decline */
}

.rcontrols .follow-up .fbt {
  padding: 12px 0;
  margin: 1px 1px 0 1px;
}

.rcontrols .follow-up > .fbt:first-child {
  margin-top: 0;
}

.rcontrols .follow-up .fbt.strong {
  padding: 2em 0;
  font-size: 1.2em;
}

.rcontrols .follow-up .weak {
  font-weight: normal;
  padding: 6px 0;
}

.rcontrols .follow-up .weak::before {
  opacity: 0.7;
}

.rcontrols .follow-up form .fbt {
  width: 100%;
}

.rcontrols .follow-up .spinner {
  width: 40px;
  height: 40px;
}

@media (max-width: 799px) and (orientation: portrait) {
  .rcontrols .follow-up {
    margin-top: 2vmin;
  }
}

.rcontrols .analysis {
  display: none;
}

@media (max-width: 799px) and (orientation: portrait) {
  .rcontrols .analysis {
    display: block;
    margin-left: 2em;
  }
}

.rcontrols .rematch.fbt {
  font-size: 1.2em;
  height: 6rem;
  transition: all 150ms;
}

.rcontrols .rematch.me {
  background: rgba(49, 132, 209, 0.92);
}

@keyframes rubber-band {
  from {
    transform: scale3d(1, 1, 1);
  }
  6% {
    transform: scale3d(1.25, 0.75, 1);
  }
  8% {
    transform: scale3d(0.75, 1.25, 1);
  }
  10% {
    transform: scale3d(1.15, 0.85, 1);
  }
  13% {
    transform: scale3d(0.95, 1.05, 1);
  }
  15% {
    transform: scale3d(1.05, 0.95, 1);
  }
  20% {
    transform: scale3d(1, 1, 1);
  }
}

.rcontrols .rematch.glowing span {
  display: block;
  animation: rubber-band 5s infinite;
}

.rcontrols .rematch.fbt:not(.disabled):hover {
  background: rgba(46, 123, 196, 0.88);
  color: #fff;
  animation: none;
}

.rcontrols .rematch-decline {
  background: rgba(255, 255, 255, 0.05);
  justify-content: center;
  position: absolute;
  top: 0;
  right: -25px;
  width: 25px;
  height: 6rem;
  border: 0;
  opacity: 0.7;
  background: rgba(143, 36, 36, 0.8);
  transition: all 150ms;
  display: none;
}

@media (min-width: 800px), (orientation: landscape) {
  .rcontrols .rematch-decline {
    display: block;
  }
}

.rcontrols .rematch-decline:hover {
  background: #cc3333;
  color: #fff;
  right: -36px;
  width: 35px;
}

.ricons {
  display: flex;
  justify-content: center;
}

.ricons .fbt {
  font-size: 1.4em;
  padding: .1em 1em;
}

.ricons.confirm > button {
  visibility: hidden;
}

.ricons .act-confirm {
  visibility: visible;
  position: relative;
  width: 60px;
}

.ricons .act-confirm .fbt.no {
  padding: .1em 0;
  width: 30px;
  text-align: center;
  position: absolute;
  top: 0;
  right: -34px;
}

.ricons .act-confirm .fbt.yes {
  position: absolute;
  right: 0;
  top: -3px;
  border-radius: 8px;
  color: #fff;
  text-decoration: none;
  background: #d64f00;
  border-bottom: 5px solid #963700;
  text-shadow: 0 -1px #963700;
  transition: all 150ms;
  transform: translate(0px, 0px);
}

.ricons .act-confirm .fbt.yes:hover {
  filter: brightness(1.07);
}

.ricons .act-confirm .fbt.yes:active {
  transform: translate(0px, 5px);
  border-bottom-width: 1px;
  text-shadow: 0 0 #963700;
  filter: brightness(1);
}

.round__now-playing h3 {
  margin: 1em 0 .5em 0;
}

@media (max-width: 799px) and (orientation: portrait) {
  .round__now-playing h3 {
    margin: 1em 2vmin 0.5em 2vmin;
  }
}

.round__now-playing .simul span {
  font-weight: bold;
  margin: 0 .5em;
}

.round__now-playing .simul .win {
  color: #629924;
}

.round__now-playing .simul .draw {
  color: #bf811d;
}

.round__now-playing .simul .loss {
  color: #cc3333;
}

.round__now-playing .switcher label {
  cursor: pointer;
}

.round__now-playing .switcher .switch {
  margin-left: 10px;
}

.round__now-playing .now-playing {
  padding: .3em;
}

.keyboard-move input {
  width: 4.5em;
  font-size: 1.1em;
  font-weight: bold;
  margin-right: 1rem;
  border: 1px solid #404040;
  transition: all 150ms;
}

.keyboard-move input.wrong {
  background: #cc3333;
  color: #fff;
}

.keyboard-move em {
  color: #b0b0b0;
}

#powerTip .forecast-info .title {
  display: block;
  padding: .7em;
  border-bottom: 1px solid #404040;
  text-align: center;
}

#powerTip .forecast-info .content {
  display: block;
  padding: 1em;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
