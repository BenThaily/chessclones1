/* Colors */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* text over primary background */
/* Secondary: green */
/* text over secondary background */
/* Accent: orange */
/* text over accent background */
/* Brag: gold */
/* text over brag background */
/* Error: red */
/* text over brag background */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Fancy: pink */
/* text over brag background */
/* Borders */
/* Shadows */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* Secondary: green */
/* Brag: gold */
/* Fancy: pink */
/* Good: green */
/* Warn: orange */
/* Bad: red */
.chat__members {
  text-shadow: 0.5px 1px 1px #000;
}

/* Common imports for all CSS modules */
/* Widths */
/* Heights */
/* Orientations */
/* Capabilities */
/* Aliases */
/* Uniboard: keep the same page layout accross pages */
/* when the width is appropriate for col1, but landscape prevents it */
/* atm only chrome supports min-content, max-content */
.slist thead, .mchat__tab, .mchat__messages a:not(.user-link), .tour__main__header .time, .tour__standing td.rank, .tour__actor-info .stats td:last-child, .tour__actor-info .sublist th {
  font-family: 'Roboto';
}

/* text printed directly on the page background deserves special treatment (transp theme) */
.chat__members {
  color: #f7f7f7;
}

.slist thead, .tour__featured__player, .tour__controls, .tour__actor-info .stats h2 {
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.5) 100%);
}

#modal-wrap {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
}

.fbt {
  background: none;
  border: none;
  outline: none;
  color: #cccccc;
}

.mchat__tab input {
  -webkit-appearance: none;
  background: #161512;
  border: 1px solid rgba(0, 0, 0, 0.5);
  display: inline-block;
  padding: .5em;
}

.mchat__tab input:checked {
  background: #3b5c16;
  border-color: #4f7a1d;
}

.context-streamer, .mchat__tab, .tour__meta section .setup {
  white-space: nowrap;
  overflow: hidden;
}

.mchat__tab span, .tour__standing .player .name, .tour__player-info .pairings td:nth-child(2) {
  white-space: nowrap;
}

.mchat__messages, .tour__team-standing .players {
  overflow-wrap: break-word;
  word-break: break-word;
}

.mchat__tab span, .tour__standing .player .name, .tour__player-info .pairings td:nth-child(2), .tour__podium > div, .tour__duels strong {
  overflow: hidden;
  text-overflow: ellipsis;
}

#modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.6);
  z-index: 109;
}

.tour__controls .pager, #modal-overlay {
  /* extends %flex-wrap */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}

.context-streamer, .tour__meta section[data-icon], .tour__featured__player, .tour__main__header {
  display: flex;
  flex-flow: row;
  align-items: center;
}

.tour__controls, .tour__duels line {
  /* extends %flex-center */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
}

.mchat, .mchat__content, .tour__side, .tour__featured, .tour__main__header .clock-created, .tour__ur-playing, .tour__duels a, .tour__actor-info .stats, #modal-wrap {
  display: flex;
  flex-flow: column;
}

.mchat__tab input, .mchat, .tour__meta, .tour__featured, .tour__actor-info, .tour__stats, .tour__duels .rank, #modal-wrap {
  border-radius: 3px;
}

.mchat, .tour__meta, .tour__featured, .tour__actor-info {
  overflow: hidden;
  /* helps with clipping background into border-radius */
}

.mchat__tab {
  border-radius: 3px 3px 0 0;
}

.context-streamer {
  border-radius: 0 0 3px 3px;
}

.tour__stats, .mchat, .tour__meta, .tour__featured, .tour__actor-info, .context-streamer, .tour__controls, #modal-wrap .close:hover {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

.fbt {
  text-transform: uppercase;
  line-height: 1.5;
  transition: all 150ms;
}

@media (hover: hover) {
  .fbt:hover:not(.disabled):not([disabled]) {
    background: rgba(86, 134, 31, 0.9);
    color: #fff;
  }
}

.fbt.active {
  background: #629924 !important;
  color: #fff;
}

.fbt.disabled, .fbt[disabled] {
  opacity: 0.5;
  cursor: default;
}

@keyframes bar-glider-anim {
  0% {
    transform: translateX(-1300px);
  }
  100% {
    transform: translateX(2100px);
  }
}

.bar-glider {
  position: relative;
  overflow: hidden;
}

.bar-glider::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 70px;
  background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.3));
  animation: bar-glider-anim 3s linear infinite;
}

.slist {
  width: 100%;
  border-bottom: 1px solid #404040;
}

.slist thead th {
  border-top: 1px solid #404040;
  border-bottom: 1px solid #404040;
  padding: .5rem .8rem;
}

.slist thead th.large {
  font-size: 1.2rem;
}

.slist td {
  padding: 1rem;
}

.slist td .label {
  font-family: monospace;
  font-size: .8rem;
}

.slist tbody tr:nth-child(even) {
  background: rgba(255, 255, 255, 0.05);
}

.slist td:first-child,
.slist th:first-child {
  padding-left: 1.5rem;
}

.slist-pad td:first-child,
.slist-pad th:first-child {
  padding-left: var(--box-padding);
}

.slist-pad td:last-child,
.slist-pad th:last-child {
  padding-right: var(--box-padding);
}

.pull-quote {
  margin: 0 auto;
}

.pull-quote p {
  color: #cccccc;
  position: relative;
  margin: 0 .7em;
  padding: 1em 0;
  border: 1px solid #404040;
  border-width: 1px 0;
  font-style: italic;
  font-size: 1.1rem;
}

.pull-quote p:after {
  content: '';
  position: absolute;
  bottom: -9px;
  left: 42px;
  width: 15px;
  height: 15px;
  background: rgba(0, 0, 0, 0.6);
  border-left: 2px solid #404040;
  border-bottom: 1px solid #404040;
  transform: skew(45deg) rotate(-45deg);
}

.pull-quote.long p {
  font-size: 1rem;
}

.pull-quote footer {
  margin: 10px;
  line-height: 20px;
  text-align: right;
}

.pull-quote footer:before {
  content: '\2014\2009';
}

.fire-trophy {
  text-shadow: 0 .008em .127em #fefcc9, .055em -.066em .2em #feec85, -.111em -.127em .272em #ffae34, .111em -.272em .411em #ec760c, -.111em -.456em .416em #cd4606, 0 -.533em .577em #973716, .055em -.55em .533em #451b0e;
}

@keyframes fire-trophy {
  0% {
    text-shadow: 0 .008em .127em #fefcc9, .055em -.066em .2em #feec85, -.111em -.127em .272em #ffae34, .111em -.272em .411em #ec760c, -.111em -.456em .416em #cd4606, 0 -.533em .577em #973716, .055em -.55em .533em #451b0e;
  }
  100% {
    text-shadow: 0 0 .111em #fefcc9, .055em -.055em .166em #fefcc9, -.111em -.111em .222em #feec85, .122em -.233em .333em #ffae34, -.122em -.322em .277em #ec760c, 0 -.456em .444em #cd4606, .055em -.5em .444em #973716;
  }
}

.fire-trophy {
  color: #cccccc;
  font-size: 90px;
  display: block;
}

.fire-trophy:hover {
  animation: fire-trophy 1.5s ease-in-out infinite alternate;
}

.color-icon.white::before {
  content: "J";
}

.color-icon.black::before {
  content: "K";
}

.color-icon.random::before {
  content: "l";
}

.context-streamer {
  height: 2.2em;
  color: #fff !important;
  background: #44641d;
  transition: all 150ms;
}

.context-streamer::before {
  font-size: 1.3em;
  margin-left: .4em;
}

.context-streamer:hover {
  background: #537e20;
}

body ::-webkit-scrollbar,
body ::-webkit-scrollbar-corner {
  width: .5rem;
  background: rgba(0, 0, 0, 0.6);
}

body ::-webkit-scrollbar-thumb {
  background: #4d4d4d;
}

body ::-webkit-scrollbar-thumb:hover,
body ::-webkit-scrollbar-thumb:active {
  background: #7a7a7a;
}

.mchat__tabs {
  flex: 0 0 auto;
  display: flex;
}

.mchat__tab {
  flex: 1 1 auto;
  text-align: center;
  padding: .4em 10px;
  cursor: pointer;
  color: #f7f7f7;
  transition: all 150ms;
}

.mchat__tab:hover {
  background: rgba(62, 23, 0, 0.66);
}

.mchat__tab-active {
  color: #cccccc;
  background: rgba(0, 0, 0, 0.6) !important;
}

.mchat__tab input {
  cursor: pointer;
  display: none;
}

.mchat__tab-active input {
  display: block;
}

.mchat__tab:last-child {
  border-right: none;
}

.mchat-optional .mchat__tab.discussion {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.chat__members {
  font-size: .9em;
  height: 100%;
  overflow: hidden;
}

.mchat__messages {
  flex: 1 1 auto;
  max-height: 50vh;
  overflow-y: auto;
  overflow-x: hidden;
  cursor: initial;
  font-size: .9em;
}

@media (min-width: 1260px) {
  .mchat__messages {
    max-height: none;
  }
}

.mchat__messages li {
  position: relative;
  padding: .5em 0 .5em 10px;
  line-height: 1.2em;
  overflow-y: hidden;
  user-select: text;
}

.mchat__messages .deleted {
  opacity: 0.5;
}

.mchat__messages .system {
  display: block;
  opacity: 0.8;
  font-style: italic;
  font-size: .9em;
  margin-left: 0;
  text-align: center;
}

.mchat__messages .color,
.mchat__messages .user-link {
  font-weight: bold;
  padding: 0;
  color: #b0b0b0;
  letter-spacing: -1px;
  margin-right: .4em;
}

.mchat__messages .title {
  margin-right: 3px;
}

.mchat__messages i {
  display: none;
  position: absolute;
  top: 5px;
  right: 0;
  cursor: pointer;
  margin-right: 3px;
  padding: 4px 5px;
  opacity: 0.7;
  color: #d64f00;
}

.mchat__messages i:hover {
  opacity: 1;
}

.mchat__messages li:hover i {
  display: block;
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.6), 0 0 5px rgba(0, 0, 0, 0.6), 0 0 10px rgba(0, 0, 0, 0.6);
}

.mchat__say {
  flex: 0 0 auto;
  border: 0;
  border-top: 1px solid #404040;
  border-radius: 0;
  padding: 3px 20px 3px 4px;
}

.mchat__say.whisper {
  color: #629924;
  font-weight: bold;
  font-style: italic;
}

@keyframes glowing {
  42% {
    background: none;
  }
  50% {
    background: rgba(20, 54, 85, 0.68);
  }
  58% {
    background: none;
  }
}

.glowing {
  animation: glowing 2s ease-in-out infinite;
}

@keyframes palantir-glowing {
  40% {
    background: none;
  }
  50% {
    background: rgba(49, 76, 18, 0.72);
  }
  60% {
    background: rgba(27, 73, 116, 0.72);
  }
  70% {
    background: none;
  }
}

.palantir {
  flex: 0 1 auto;
  animation: palantir-glowing 1.5s ease-in-out infinite;
  border-radius: 0 3px 0 0;
}

.palantir-slot {
  animation: none;
  opacity: .6;
}

.palantir-slot:hover {
  opacity: 1;
}

.palantir-off {
  animation: none;
}

.palantir-on {
  background: #629924;
  color: #fff;
  animation: none;
}

.palantir-on:hover {
  background: #cc3333 !important;
  color: #fff !important;
}

.palantir::after {
  top: 1px;
  left: 0;
  right: auto;
  background: none;
  box-shadow: none;
}

.mchat {
  grid-area: chat;
  justify-content: stretch;
  min-height: 15em;
}

.mchat__content {
  background: rgba(0, 0, 0, 0.6);
  flex: 1 1 auto;
  overflow: hidden;
}

.mchat__content.note textarea {
  font-size: .9em;
  flex-grow: 1;
  border: none;
  background-color: transparent;
  line-height: 1.7em;
  outline: none;
  resize: none;
}

@media (min-width: 800px) {
  #main-wrap {
    --main-max-width: auto;
  }
}

.tour {
  display: grid;
  grid-template-areas: 'main' 'side' 'uchat' 'table';
  grid-gap: 2vmin;
}

.tour__side {
  grid-area: side;
}

.tour__table, .tour__stats, .tour__player {
  grid-area: table;
}

.tour__main {
  grid-area: main;
}

.tour .chat__members {
  grid-area: uchat;
}

@media (min-width: 800px) {
  .tour {
    grid-template-columns: minmax(500px, calc(100vh * 0.9 - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) minmax(240px, 400px);
    grid-template-rows: calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 2vmin - 3rem) min-content;
    grid-template-areas: 'main  side' 'main  uchat' 'table table';
  }
  .tour__table {
    display: flex;
  }
  .tour__table > * {
    flex: 0 0 50%;
  }
  .tour .mchat__messages {
    max-height: inherit;
  }
}

@media (min-width: 1260px) {
  .tour {
    grid-template-columns: minmax(230px, 20vw) minmax(500px, calc(100vh * 0.9 - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) minmax(240px, 400px);
    grid-template-rows: calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 2vmin - 3rem) auto;
    grid-template-areas: 'side  main table' 'uchat main table';
  }
  .tour__table {
    flex-flow: column;
  }
  .tour__table > * {
    flex: inherit;
  }
}

.tour__side .mchat {
  flex: 1 1 7em;
  margin-top: 2vmin;
}

@media (min-width: 800px) {
  .tour__side .mchat {
    min-height: inherit;
  }
}

.tour__meta {
  background: rgba(0, 0, 0, 0.6);
  padding: 1.2vmin 2vmin;
}

.tour__meta section {
  border-bottom: 1px solid #404040;
  margin-bottom: 1.33333vmin;
  padding-bottom: 1.33333vmin;
}

.tour__meta section::before {
  font-size: 3rem;
  margin-right: 4%;
}

.tour__meta section p {
  margin: 0;
}

.tour__meta section time {
  opacity: 1;
}

.tour__meta section .terminate {
  display: inline-block;
  margin-left: .3em;
}

.tour__meta section .terminate .fbt {
  padding: 0 .3em;
}

.tour__meta section .terminate .fbt:hover {
  background: rgba(179, 45, 45, 0.9);
}

.tour__meta section .defender::before {
  font-size: 1.6em;
  vertical-align: -.26em;
  margin: 0 .15em 0 -.15em;
}

.tour__meta section.conditions::before {
  opacity: 0.7;
}

.tour__meta section.conditions.accepted {
  color: #629924;
}

.tour__meta section.conditions.refused {
  color: #cc3333;
}

.chat__members {
  overflow: visible;
  /* fixes invisible spectators on firefox, col2 */
}

@media (max-width: 799px) and (orientation: portrait) {
  .chat__members {
    margin: 0 2vmin;
  }
}

.tour__featured__player > * {
  padding: .3em 0;
}

.tour__featured__player strong {
  flex: 0 0 12.5%;
  text-align: center;
  background: rgba(0, 0, 0, 0.6);
  margin-right: 10px;
}

.tour__featured__player .user-link {
  flex: 1 1 100%;
}

.tour__featured__player i {
  flex: 0 0 auto;
}

.tour__featured__player i::before {
  color: #d64f00;
  margin-right: 5px;
}

.tour__main__header {
  position: relative;
  min-height: 7em;
  padding: 0 3vmin;
}

.tour__main__header h1 {
  font-size: 2.2rem;
  flex: 9 1 auto;
  margin: 0;
  overflow: hidden;
}

.tour__main__header h1 a {
  /* GM wikipedia */
  color: #98b8d6;
}

.tour__main__header h1 a:hover {
  color: #3692e7;
}

.tour__main__header img {
  flex: 0 0 60px;
  display: block;
  width: 60px;
  height: 60px;
  padding: 6px;
}

.tour__main__header .img {
  margin-right: 1rem;
}

.tour__main__header i::before {
  font-size: 2.2rem;
}

.tour-shed .tour__main__header h1 {
  letter-spacing: 2px;
}

.tour-shed-weekly .tour__main__header i::before {
  font-size: 35px;
}

.tour-shed-monthly .tour__main__header i::before,
.tour-shed-weekend .tour__main__header i::before {
  font-size: 40px;
}

.tour-shed-yearly .tour__main__header i::before {
  font-size: 45px;
}

.tour-shed-weekend .tour__main__header h1,
.tour-shed-yearly .tour__main__header h1 {
  letter-spacing: 3px;
}

.tour__main__header .clock {
  flex: 0 0 auto;
  font-weight: bold;
  color: #b0b0b0;
}

.tour__main__header .clock-created {
  text-align: right;
}

.tour-sched .tour__main__header h1,
.tour-sched .tour__main__header .img {
  color: #bf811d;
}

.tour__main-finished .tour__main__header h1 {
  text-align: center;
}

.tour-sched-marathon .tour__main-finished .tour__main__header h1 {
  padding-left: 0;
}

.tour__main__header .time {
  font-size: 1.5em;
  margin-left: .2em;
}

.tour__main__header .shy {
  line-height: 20px;
  font-size: .9em;
  font-weight: bold;
  text-transform: uppercase;
  opacity: 0.6;
  white-space: nowrap;
}

.tour-sched-marathon .tour__main__header h1 {
  color: #4166a0 !important;
  padding-left: 90px;
  letter-spacing: 2px;
}

.tour-sched-marathon .tour__main__header .fire-trophy {
  position: absolute;
  top: 0;
  left: 10px;
  width: 70px;
  height: 80px;
  opacity: 0.7;
  transition: 1s;
  font-family: "lichess";
  filter: hue-rotate(190deg);
}

.tour-sched-marathon .tour__main__header .fire-trophy:hover {
  opacity: 1;
}

.tour-sched-shield .tour__main__header h1 {
  padding-left: 90px;
  letter-spacing: 2px;
}

.tour-sched-shield .tour__main__header h1 .shield-trophy {
  position: absolute;
  top: -8px;
  left: 12px;
  display: block;
  width: 67px;
  height: 80px;
  background: url(../images/trophy/shield-gold.png) no-repeat;
  background-size: contain;
  font-family: "lichess";
  font-size: 40px;
  line-height: 80px;
  text-align: center;
  color: #333 !important;
  text-shadow: 0 0 6px #fff;
}

.tour__notice {
  color: #fff;
  background: #629924;
  text-align: center;
  padding: .5em 0;
  opacity: 0.8;
}

.tour__notice.closed {
  background: #3692e7;
}

.tour__ur-playing {
  text-align: center;
  font-size: 1.5em;
  position: relative;
}

.tour__ur-playing::before, .tour__ur-playing::after {
  content: 'U';
  font-size: 2rem;
  position: absolute;
  top: 30px;
}

.tour__ur-playing::before {
  left: 30px;
}

.tour__ur-playing::after {
  right: 30px;
}

.tour__controls {
  padding: 0 0px;
  position: relative;
}

.tour__controls .fbt {
  padding: .6em .8em;
  text-transform: uppercase;
  line-height: 1.3;
}

@media (min-width: 500px) {
  .tour__controls .fbt {
    padding: .6em 1em;
  }
}

@keyframes tour-delay {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}

.tour__controls .delay {
  background: rgba(117, 153, 0, 0.5);
  width: 0%;
}

.tour__controls .delay button {
  opacity: 0.7;
  color: #b0b0b0;
  mix-blend-mode: luminosity;
}

.tour__controls .highlight {
  position: absolute;
  right: 5px;
  top: -3px;
  padding: 8px 20px;
  border-radius: 8px;
  color: #FFF;
  text-decoration: none;
  background: #82BF56;
  border-bottom: 5px solid #759900;
  text-shadow: 0 -1px #759900;
  transition: all 0.1s;
  transform: translate(0px, 0px);
}

.tour__controls .highlight:hover {
  filter: brightness(1.06);
}

.tour__controls .highlight:active {
  transform: translate(0px, 5px);
  border-bottom-width: 1px;
  text-shadow: 0 0 #759900;
  filter: brightness(1);
}

.tour__controls .spinner {
  margin: 0;
  width: 1.5em;
  height: 1.5em;
  margin-right: .7em;
}

.tour__controls .pager {
  user-select: none;
}

.tour__controls .pager .page {
  margin: 0 3px;
  white-space: nowrap;
}

.tour__controls .pager input {
  border: none;
  background: rgba(98, 153, 36, 0.2);
}

.tour__controls .pager .search,
.tour__controls .pager input,
.tour__controls .pager .twitter-typeahead {
  height: 100%;
}

.tour__controls .search .tt-menu .spinner {
  float: none;
  margin: 10px auto;
}

.tour__standing {
  border: none;
}

.tour__standing .player {
  padding-left: 0px;
  padding-right: 0px;
}

.tour__standing .player .name {
  display: inline-block;
  vertical-align: middle;
  padding-right: 5px;
  max-width: 140px;
}

.tour__standing .user-link.long {
  letter-spacing: -0.7px;
}

.tour__standing .user-link .rating {
  font-style: italic;
  font-size: .8em;
}

.tour__standing tr.long .user-link .rating {
  display: block;
  padding-left: 0px;
}

.tour__standing tr {
  transition: all 150ms;
  user-select: none;
}

.tour__standing .loading tbody {
  opacity: 0.6;
  transition: opacity 0.3s;
}

.tour__standing:not(.created):not(.loading) tbody tr:hover {
  background: rgba(27, 73, 116, 0.72);
  cursor: pointer;
}

.tour__standing tr.me td:first-child {
  background: linear-gradient(to right, rgba(83, 129, 30, 0.88) 0px, rgba(83, 129, 30, 0.88) 5px, rgba(0, 0, 0, 0) 5px, rgba(0, 0, 0, 0) 100%);
}

.tour__standing tr.active td:last-child {
  background: linear-gradient(to left, rgba(46, 123, 196, 0.88) 0px, rgba(46, 123, 196, 0.88) 5px, rgba(0, 0, 0, 0) 5px, rgba(0, 0, 0, 0) 100%);
}

.tour__standing td.rank {
  padding: 1em .5em 1em 10px;
  width: 1px;
  /* helps keeping it as small as possible */
}

.tour__standing td.rank i {
  opacity: .4;
  font-size: .8em;
}

.tour__standing .sheet {
  text-align: right;
  padding-right: 0;
  padding-left: 0;
  letter-spacing: .1em;
}

.tour__standing .sheet > * {
  display: inline-block;
}

.tour__standing .sheet score {
  opacity: 0.7;
}

.tour__standing tr.long .sheet {
  font-size: .9rem;
  letter-spacing: .06em;
}

.tour__standing tr.xlong .sheet {
  font-size: .85rem;
  letter-spacing: .04em;
}

.tour__standing double {
  color: #bf811d;
  /* font-weight: bold; */
}

.tour__standing streak {
  color: #629924;
  /* font-weight: bold; */
}

.tour__standing .total {
  text-align: right;
  font-weight: bold;
  padding-right: 2vmin;
}

.tour__podium {
  /* ratios:
  $first-ratio: 1.3;
  $trophy-ratio: 1.1056;
   */
}

.tour__podium > div {
  display: inline-block;
  text-align: center;
}

.tour__podium .first {
  width: 44%;
  font-size: 1.6em;
}

.tour__podium .second {
  font-size: 1.3em;
  width: 31%;
}

.tour__podium .third {
  font-size: 1.2em;
  width: 25%;
}

.tour__podium .first .trophy {
  height: 150px;
  width: 195px;
  background: url("../images/icons/trophy-1.svg") no-repeat;
  background-size: cover;
}

.tour__podium .second .trophy {
  height: 85px;
  width: calc(1.1056 * 85px);
  background: url("../images/icons/trophy-2.min.svg") no-repeat;
}

.tour__podium .third .trophy {
  height: 65px;
  width: calc(1.1056 * 65px);
  background: url("../images/icons/trophy-3.min.svg") no-repeat;
}

.tour__podium .trophy {
  margin: 0 auto 8px auto;
  background-size: contain !important;
}

@media (max-width: 499px) {
  .tour__podium .trophy {
    display: none;
  }
}

.tour__podium .user-link {
  font-weight: bold;
  letter-spacing: -1px;
}

.tour__podium .stats {
  margin: .5em auto 0 auto;
  font-size: .7em;
}

.tour__podium .stats th {
  letter-spacing: -1px;
}

.tour__podium .stats td {
  font-weight: bold;
  padding-left: 5px;
  text-align: right;
}

.tour__podium .third .stats {
  font-size: .8em;
}

.tour .big_top {
  position: relative;
  padding-bottom: 20px;
}

.tour .big_top #confetti {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  opacity: 1;
  transition: opacity 25s;
}

.tour .big_top #confetti.faded {
  opacity: 0;
}

.tour__stats {
  background: rgba(0, 0, 0, 0.6);
  padding: 1.7em 0;
  align-self: flex-start;
}

.tour__stats h2 {
  font-size: 1.5em;
  margin-bottom: 1em;
  text-align: center;
}

.tour__stats table {
  margin: auto;
}

.tour__stats td {
  font-weight: bold;
  padding-left: 1em;
  text-align: right;
  line-height: 2em;
}

.tour__duels {
  margin: 2vmin 0 0 0;
}

@media (min-width: 800px) {
  .tour__duels {
    margin: 0 0 0 2vmin;
  }
}

@media (min-width: 1260px) {
  .tour__duels {
    margin: 2vmin 0 0 0;
  }
}

.tour__duels h2 {
  font-size: 1.5em;
  margin-bottom: .2em;
  text-transform: uppercase;
  letter-spacing: 2px;
}

.tour__duels a {
  color: #cccccc;
  padding: .5em .7em;
  white-space: nowrap;
  line-height: 1.9em;
  border: 1px solid #383838;
  border-bottom: none;
  transition: all 150ms;
}

.tour__duels a:first-child {
  border-top: none;
}

.tour__duels a:nth-child(even) {
  border-left: none;
}

.tour__duels a:nth-child(odd) {
  border-right: none;
}

.tour__duels a:hover {
  background: #1d2e3d;
}

.tour__duels strong {
  font-size: 1.2em;
  color: #b0b0b0;
  display: block;
  max-width: 60%;
}

.tour__duels .title {
  color: #bf811d;
  font-weight: bold;
}

.tour__duels .rank {
  padding: .1em .5em;
  background: #bf811d;
  color: #fff;
}

.tour__duels .b .title,
.tour__duels .b .rank {
  margin-right: .3em;
}

.tour__duels .a .title,
.tour__duels .a .rank {
  margin-left: .3em;
}

.tour__actor-info {
  background: rgba(0, 0, 0, 0.6);
  position: relative;
  align-self: flex-start;
}

.tour__actor-info .spinner {
  margin: 5em auto;
}

.tour__actor-info .close {
  position: absolute;
  top: 4px;
  right: 5px;
  opacity: .6;
  transition: all 150ms;
  color: #cc3333;
}

.tour__actor-info .close:hover {
  opacity: 1;
}

.tour__actor-info .stats {
  justify-content: center;
}

.tour__actor-info .stats h2 {
  font-size: 1.4em;
  padding: .6rem 1rem;
  border-bottom: 1px solid #404040;
}

.tour__actor-info .stats table {
  margin: 1em auto;
}

.tour__actor-info .stats td {
  font-weight: bold;
  padding-left: 10px;
  text-align: right;
  line-height: 1.8em;
}

.tour__actor-info .sublist {
  width: 100%;
}

.tour__actor-info .sublist tr {
  cursor: pointer;
  transition: background-color 150ms;
}

.tour__actor-info .sublist tr:nth-child(odd) {
  background: rgba(255, 255, 255, 0.05);
}

.tour__actor-info .sublist tr:hover {
  background: rgba(11, 30, 48, 0.64);
}

.tour__actor-info .sublist th, .tour__actor-info .sublist td {
  padding: .3em;
}

.tour__actor-info .sublist th {
  padding-left: 7px;
}

.tour__actor-info .sublist .title {
  color: #bf811d;
  font-weight: bold;
}

.tour__player-info .pairings {
  width: 100%;
}

.tour__player-info .pairings tr {
  cursor: pointer;
  transition: background-color 150ms;
}

.tour__player-info .pairings tr:nth-child(odd) {
  background: rgba(255, 255, 255, 0.05);
}

.tour__player-info .pairings tr:hover {
  background: rgba(11, 30, 48, 0.64);
}

.tour__player-info .pairings th, .tour__player-info .pairings td {
  padding: .3em;
}

.tour__player-info .pairings th {
  border-left: 3px solid #4d4d4d;
  transition: all 150ms;
}

.tour__player-info .pairings tr:hover th {
  border-color: #cccccc;
}

.tour__player-info .pairings tr.win:hover th {
  border-color: #629924;
}

.tour__player-info .pairings tr.loss:hover th {
  border-color: #cc3333;
}

.tour__player-info .pairings td:nth-child(2) {
  max-width: 200px;
}

.tour__player-info .pairings td:last-child {
  font-weight: bold;
  opacity: .8;
}

.tour__player-info .pairings tr.win td:last-child {
  color: #629924;
  opacity: 1;
}

.tour__player-info .pairings tr.loss td:last-child {
  color: #cc3333;
  opacity: 1;
}

.tour__player-info .color-icon {
  opacity: .6;
}

.tour__team-info .players {
  width: 100%;
}

.tour__team-info .players tr {
  cursor: pointer;
  transition: background-color 150ms;
}

.tour__team-info .players tr:nth-child(odd) {
  background: rgba(255, 255, 255, 0.05);
}

.tour__team-info .players tr:hover {
  background: rgba(11, 30, 48, 0.64);
}

.tour__team-info .players th, .tour__team-info .players td {
  padding: .3em 1em;
}

.tour__team-info .players td:last-child {
  text-align: right;
}

.tour__team-info .players .rating {
  font-style: italic;
  font-size: .8em;
}

.tour__team-info .players .leader::before {
  color: #bf811d;
  margin-right: .15em;
}

.tour .pull-quote {
  margin-top: 30px;
  width: 300px;
}

.tour .box.created {
  padding-bottom: 2em;
  /* as quote margin */
}

.tour__faq {
  padding: 4em var(--box-padding);
  display: none;
}

@media (min-width: 800px) {
  .tour__faq {
    display: block;
  }
}

.tour__faq h2 {
  margin: 1.5em 0 .5em 0;
}

#modal-overlay {
  justify-content: center;
}

#modal-wrap {
  background: rgba(0, 0, 0, 0.6);
  position: relative;
  padding: 2rem;
  text-align: center;
  max-width: 100vw;
  max-height: 96vh;
}

#modal-wrap > div {
  overflow: auto;
}

#modal-wrap .close {
  color: #cccccc;
  position: absolute;
  font-size: 16px;
  line-height: 27px;
  width: 32px;
  height: 32px;
  cursor: pointer;
  top: 0;
  right: 0;
  background: none;
}

@media (min-width: 800px) {
  #modal-wrap .close {
    top: -12px;
    right: -12px;
    background: rgba(0, 0, 0, 0.6);
    border-radius: 50%;
  }
}

#modal-wrap .close:hover {
  background: #cc3333;
  color: #fff;
}

team.ttc-0 {
  color: #a42eff;
}

team.ttc-1 {
  color: #5757ff;
}

team.ttc-2 {
  color: #008000;
}

team.ttc-3 {
  color: #b22222;
}

team.ttc-4 {
  color: #ec7a51;
}

team.ttc-5 {
  color: #9acd32;
}

team.ttc-6 {
  color: #ff4500;
}

team.ttc-7 {
  color: #2e8b57;
}

team.ttc-8 {
  color: #daa520;
}

team.ttc-9 {
  color: #d27e1e;
}

team {
  padding: 1px 5px;
  font-size: .8em;
  font-weight: bold;
}

.tour__player-info team {
  margin: 1rem auto 0 auto;
  padding: .15rem .8rem;
  font-size: 1em;
  cursor: pointer;
}

.tour__standing .rating {
  padding-right: 5px;
}

.tour__team-standing tbody tr:nth-child(odd) {
  background: rgba(255, 255, 255, 0.05);
}

.tour__team-standing tbody tr:nth-child(even) {
  background: rgba(0, 0, 0, 0.6);
}

.tour__team-standing .team {
  cursor: pointer;
}

.tour__team-standing .team:hover {
  color: #3692e7;
}

.tour__team-standing .team team {
  font-size: 1rem;
}

.tour__team-standing .players {
  color: #b0b0b0;
}

.tour__team-standing score {
  font-weight: bold;
  padding: 0 2px;
  cursor: pointer;
}

.tour__team-standing score:hover {
  color: #bf811d;
}

.tour__team-standing score.top username {
  font-weight: normal;
}

.tour__team-standing .total {
  text-align: right;
  font-weight: bold;
  padding-right: 2vmin;
}

.tour__team-standing tr.active td:last-child {
  background: linear-gradient(to left, rgba(46, 123, 196, 0.88) 0px, rgba(46, 123, 196, 0.88) 5px, rgba(0, 0, 0, 0) 5px, rgba(0, 0, 0, 0) 100%);
}

.tour__team-standing tr:hover {
  background: rgba(27, 73, 116, 0.72) !important;
}

.team-battle__list a {
  display: block;
}

.team-battle__choice a {
  display: block;
  margin-top: 1rem;
}

.tour__duels team {
  line-height: normal;
}

.team-picker ul {
  text-align: left;
  font-size: 1.1em;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
